// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commands.proto

/*
Package sparkusb is a generated protocol buffer package.

It is generated from these files:
	commands.proto

It has these top-level messages:
	RequestWire
	ResponseWire
	ControlRequest
	CommandLineRequest
	CommandLineResponse
	RootCommand
	RootResponse
	ListRequest
	ListResponse
	FirmwareRequest
	FirmwareResponse
	HeartbeatRequest
	AddressRequest
	AddressResponse
	ParameterRequest
	ParameterResponse
	ParameterListRequest
	ParameterListResponse
	SetpointRequest
	SetpointResponse
*/
package sparkusb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfigParam int32

const (
	ConfigParam_CanID           ConfigParam = 0
	ConfigParam_InputMode       ConfigParam = 1
	ConfigParam_MotorType       ConfigParam = 2
	ConfigParam_CommAdv         ConfigParam = 3
	ConfigParam_SensorType      ConfigParam = 4
	ConfigParam_CtrlType        ConfigParam = 5
	ConfigParam_IdleMode        ConfigParam = 6
	ConfigParam_InputDeadband   ConfigParam = 7
	ConfigParam_FirmwareVersion ConfigParam = 8
)

var ConfigParam_name = map[int32]string{
	0: "CanID",
	1: "InputMode",
	2: "MotorType",
	3: "CommAdv",
	4: "SensorType",
	5: "CtrlType",
	6: "IdleMode",
	7: "InputDeadband",
	8: "FirmwareVersion",
}
var ConfigParam_value = map[string]int32{
	"CanID":           0,
	"InputMode":       1,
	"MotorType":       2,
	"CommAdv":         3,
	"SensorType":      4,
	"CtrlType":        5,
	"IdleMode":        6,
	"InputDeadband":   7,
	"FirmwareVersion": 8,
}

func (x ConfigParam) String() string {
	return proto.EnumName(ConfigParam_name, int32(x))
}
func (ConfigParam) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MotorType int32

const (
	MotorType_Brushed   MotorType = 0
	MotorType_Brushless MotorType = 1
)

var MotorType_name = map[int32]string{
	0: "Brushed",
	1: "Brushless",
}
var MotorType_value = map[string]int32{
	"Brushed":   0,
	"Brushless": 1,
}

func (x MotorType) String() string {
	return proto.EnumName(MotorType_name, int32(x))
}
func (MotorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SensorType int32

const (
	SensorType_HallSensor SensorType = 0
	SensorType_Encoder    SensorType = 1
	SensorType_Sensorless SensorType = 2
)

var SensorType_name = map[int32]string{
	0: "HallSensor",
	1: "Encoder",
	2: "Sensorless",
}
var SensorType_value = map[string]int32{
	"HallSensor": 0,
	"Encoder":    1,
	"Sensorless": 2,
}

func (x SensorType) String() string {
	return proto.EnumName(SensorType_name, int32(x))
}
func (SensorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CtrlType int32

const (
	CtrlType_DutyCycle CtrlType = 0
	CtrlType_Velocity  CtrlType = 1
)

var CtrlType_name = map[int32]string{
	0: "DutyCycle",
	1: "Velocity",
}
var CtrlType_value = map[string]int32{
	"DutyCycle": 0,
	"Velocity":  1,
}

func (x CtrlType) String() string {
	return proto.EnumName(CtrlType_name, int32(x))
}
func (CtrlType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type IdleMode int32

const (
	IdleMode_Coast IdleMode = 0
	IdleMode_Brake IdleMode = 1
)

var IdleMode_name = map[int32]string{
	0: "Coast",
	1: "Brake",
}
var IdleMode_value = map[string]int32{
	"Coast": 0,
	"Brake": 1,
}

func (x IdleMode) String() string {
	return proto.EnumName(IdleMode_name, int32(x))
}
func (IdleMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Faults int32

const (
	Faults_Brownout    Faults = 0
	Faults_Overcurrent Faults = 1
	Faults_Overvoltage Faults = 2
	Faults_MotorFault  Faults = 3
	Faults_SensorFault Faults = 4
	Faults_Stall       Faults = 5
	Faults_EEPROMCRC   Faults = 6
)

var Faults_name = map[int32]string{
	0: "Brownout",
	1: "Overcurrent",
	2: "Overvoltage",
	3: "MotorFault",
	4: "SensorFault",
	5: "Stall",
	6: "EEPROMCRC",
}
var Faults_value = map[string]int32{
	"Brownout":    0,
	"Overcurrent": 1,
	"Overvoltage": 2,
	"MotorFault":  3,
	"SensorFault": 4,
	"Stall":       5,
	"EEPROMCRC":   6,
}

func (x Faults) String() string {
	return proto.EnumName(Faults_name, int32(x))
}
func (Faults) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type StickyFaults int32

const (
	StickyFaults_BrownoutSticky    StickyFaults = 0
	StickyFaults_OvercurrentSticky StickyFaults = 1
	StickyFaults_OvervoltageSticky StickyFaults = 2
	StickyFaults_MotorFaultSticky  StickyFaults = 3
	StickyFaults_SensorFaultSticky StickyFaults = 4
	StickyFaults_StallSticky       StickyFaults = 5
	StickyFaults_EEPROMCRCSticky   StickyFaults = 6
)

var StickyFaults_name = map[int32]string{
	0: "BrownoutSticky",
	1: "OvercurrentSticky",
	2: "OvervoltageSticky",
	3: "MotorFaultSticky",
	4: "SensorFaultSticky",
	5: "StallSticky",
	6: "EEPROMCRCSticky",
}
var StickyFaults_value = map[string]int32{
	"BrownoutSticky":    0,
	"OvercurrentSticky": 1,
	"OvervoltageSticky": 2,
	"MotorFaultSticky":  3,
	"SensorFaultSticky": 4,
	"StallSticky":       5,
	"EEPROMCRCSticky":   6,
}

func (x StickyFaults) String() string {
	return proto.EnumName(StickyFaults_name, int32(x))
}
func (StickyFaults) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RequestWire struct {
	// Types that are valid to be assigned to Req:
	//	*RequestWire_Root
	//	*RequestWire_CmdLine
	//	*RequestWire_List
	//	*RequestWire_Firmware
	//	*RequestWire_Heartbeat
	//	*RequestWire_Address
	//	*RequestWire_Parameter
	//	*RequestWire_ParameterList
	//	*RequestWire_Setpoint
	//	*RequestWire_Control
	Req isRequestWire_Req `protobuf_oneof:"req"`
}

func (m *RequestWire) Reset()                    { *m = RequestWire{} }
func (m *RequestWire) String() string            { return proto.CompactTextString(m) }
func (*RequestWire) ProtoMessage()               {}
func (*RequestWire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequestWire_Req interface{ isRequestWire_Req() }

type RequestWire_Root struct {
	Root *RootCommand `protobuf:"bytes,10,opt,name=root,oneof"`
}
type RequestWire_CmdLine struct {
	CmdLine *CommandLineRequest `protobuf:"bytes,11,opt,name=cmdLine,oneof"`
}
type RequestWire_List struct {
	List *ListRequest `protobuf:"bytes,12,opt,name=list,oneof"`
}
type RequestWire_Firmware struct {
	Firmware *FirmwareRequest `protobuf:"bytes,13,opt,name=firmware,oneof"`
}
type RequestWire_Heartbeat struct {
	Heartbeat *HeartbeatRequest `protobuf:"bytes,14,opt,name=heartbeat,oneof"`
}
type RequestWire_Address struct {
	Address *AddressRequest `protobuf:"bytes,15,opt,name=address,oneof"`
}
type RequestWire_Parameter struct {
	Parameter *ParameterRequest `protobuf:"bytes,16,opt,name=parameter,oneof"`
}
type RequestWire_ParameterList struct {
	ParameterList *ParameterListRequest `protobuf:"bytes,17,opt,name=parameterList,oneof"`
}
type RequestWire_Setpoint struct {
	Setpoint *SetpointRequest `protobuf:"bytes,18,opt,name=setpoint,oneof"`
}
type RequestWire_Control struct {
	Control *ControlRequest `protobuf:"bytes,19,opt,name=control,oneof"`
}

func (*RequestWire_Root) isRequestWire_Req()          {}
func (*RequestWire_CmdLine) isRequestWire_Req()       {}
func (*RequestWire_List) isRequestWire_Req()          {}
func (*RequestWire_Firmware) isRequestWire_Req()      {}
func (*RequestWire_Heartbeat) isRequestWire_Req()     {}
func (*RequestWire_Address) isRequestWire_Req()       {}
func (*RequestWire_Parameter) isRequestWire_Req()     {}
func (*RequestWire_ParameterList) isRequestWire_Req() {}
func (*RequestWire_Setpoint) isRequestWire_Req()      {}
func (*RequestWire_Control) isRequestWire_Req()       {}

func (m *RequestWire) GetReq() isRequestWire_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *RequestWire) GetRoot() *RootCommand {
	if x, ok := m.GetReq().(*RequestWire_Root); ok {
		return x.Root
	}
	return nil
}

func (m *RequestWire) GetCmdLine() *CommandLineRequest {
	if x, ok := m.GetReq().(*RequestWire_CmdLine); ok {
		return x.CmdLine
	}
	return nil
}

func (m *RequestWire) GetList() *ListRequest {
	if x, ok := m.GetReq().(*RequestWire_List); ok {
		return x.List
	}
	return nil
}

func (m *RequestWire) GetFirmware() *FirmwareRequest {
	if x, ok := m.GetReq().(*RequestWire_Firmware); ok {
		return x.Firmware
	}
	return nil
}

func (m *RequestWire) GetHeartbeat() *HeartbeatRequest {
	if x, ok := m.GetReq().(*RequestWire_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *RequestWire) GetAddress() *AddressRequest {
	if x, ok := m.GetReq().(*RequestWire_Address); ok {
		return x.Address
	}
	return nil
}

func (m *RequestWire) GetParameter() *ParameterRequest {
	if x, ok := m.GetReq().(*RequestWire_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *RequestWire) GetParameterList() *ParameterListRequest {
	if x, ok := m.GetReq().(*RequestWire_ParameterList); ok {
		return x.ParameterList
	}
	return nil
}

func (m *RequestWire) GetSetpoint() *SetpointRequest {
	if x, ok := m.GetReq().(*RequestWire_Setpoint); ok {
		return x.Setpoint
	}
	return nil
}

func (m *RequestWire) GetControl() *ControlRequest {
	if x, ok := m.GetReq().(*RequestWire_Control); ok {
		return x.Control
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestWire) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestWire_OneofMarshaler, _RequestWire_OneofUnmarshaler, _RequestWire_OneofSizer, []interface{}{
		(*RequestWire_Root)(nil),
		(*RequestWire_CmdLine)(nil),
		(*RequestWire_List)(nil),
		(*RequestWire_Firmware)(nil),
		(*RequestWire_Heartbeat)(nil),
		(*RequestWire_Address)(nil),
		(*RequestWire_Parameter)(nil),
		(*RequestWire_ParameterList)(nil),
		(*RequestWire_Setpoint)(nil),
		(*RequestWire_Control)(nil),
	}
}

func _RequestWire_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestWire)
	// req
	switch x := m.Req.(type) {
	case *RequestWire_Root:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Root); err != nil {
			return err
		}
	case *RequestWire_CmdLine:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CmdLine); err != nil {
			return err
		}
	case *RequestWire_List:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *RequestWire_Firmware:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Firmware); err != nil {
			return err
		}
	case *RequestWire_Heartbeat:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Heartbeat); err != nil {
			return err
		}
	case *RequestWire_Address:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *RequestWire_Parameter:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *RequestWire_ParameterList:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ParameterList); err != nil {
			return err
		}
	case *RequestWire_Setpoint:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Setpoint); err != nil {
			return err
		}
	case *RequestWire_Control:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Control); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestWire.Req has unexpected type %T", x)
	}
	return nil
}

func _RequestWire_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestWire)
	switch tag {
	case 10: // req.root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootCommand)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Root{msg}
		return true, err
	case 11: // req.cmdLine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommandLineRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_CmdLine{msg}
		return true, err
	case 12: // req.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_List{msg}
		return true, err
	case 13: // req.firmware
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FirmwareRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Firmware{msg}
		return true, err
	case 14: // req.heartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeartbeatRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Heartbeat{msg}
		return true, err
	case 15: // req.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AddressRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Address{msg}
		return true, err
	case 16: // req.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Parameter{msg}
		return true, err
	case 17: // req.parameterList
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterListRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_ParameterList{msg}
		return true, err
	case 18: // req.setpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetpointRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Setpoint{msg}
		return true, err
	case 19: // req.control
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ControlRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Control{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestWire_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestWire)
	// req
	switch x := m.Req.(type) {
	case *RequestWire_Root:
		s := proto.Size(x.Root)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_CmdLine:
		s := proto.Size(x.CmdLine)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_List:
		s := proto.Size(x.List)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Firmware:
		s := proto.Size(x.Firmware)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Heartbeat:
		s := proto.Size(x.Heartbeat)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Address:
		s := proto.Size(x.Address)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Parameter:
		s := proto.Size(x.Parameter)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_ParameterList:
		s := proto.Size(x.ParameterList)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Setpoint:
		s := proto.Size(x.Setpoint)
		n += proto.SizeVarint(18<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Control:
		s := proto.Size(x.Control)
		n += proto.SizeVarint(19<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResponseWire struct {
	// Types that are valid to be assigned to Resp:
	//	*ResponseWire_Root
	//	*ResponseWire_CmdLine
	//	*ResponseWire_List
	//	*ResponseWire_Firmware
	//	*ResponseWire_Address
	//	*ResponseWire_Parameter
	//	*ResponseWire_Parameterlist
	//	*ResponseWire_Setpoint
	Resp isResponseWire_Resp `protobuf_oneof:"resp"`
}

func (m *ResponseWire) Reset()                    { *m = ResponseWire{} }
func (m *ResponseWire) String() string            { return proto.CompactTextString(m) }
func (*ResponseWire) ProtoMessage()               {}
func (*ResponseWire) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isResponseWire_Resp interface{ isResponseWire_Resp() }

type ResponseWire_Root struct {
	Root *RootResponse `protobuf:"bytes,10,opt,name=root,oneof"`
}
type ResponseWire_CmdLine struct {
	CmdLine *CommandLineResponse `protobuf:"bytes,11,opt,name=cmdLine,oneof"`
}
type ResponseWire_List struct {
	List *ListResponse `protobuf:"bytes,12,opt,name=list,oneof"`
}
type ResponseWire_Firmware struct {
	Firmware *FirmwareResponse `protobuf:"bytes,13,opt,name=firmware,oneof"`
}
type ResponseWire_Address struct {
	Address *AddressResponse `protobuf:"bytes,14,opt,name=address,oneof"`
}
type ResponseWire_Parameter struct {
	Parameter *ParameterResponse `protobuf:"bytes,15,opt,name=parameter,oneof"`
}
type ResponseWire_Parameterlist struct {
	Parameterlist *ParameterListResponse `protobuf:"bytes,16,opt,name=parameterlist,oneof"`
}
type ResponseWire_Setpoint struct {
	Setpoint *SetpointResponse `protobuf:"bytes,17,opt,name=setpoint,oneof"`
}

func (*ResponseWire_Root) isResponseWire_Resp()          {}
func (*ResponseWire_CmdLine) isResponseWire_Resp()       {}
func (*ResponseWire_List) isResponseWire_Resp()          {}
func (*ResponseWire_Firmware) isResponseWire_Resp()      {}
func (*ResponseWire_Address) isResponseWire_Resp()       {}
func (*ResponseWire_Parameter) isResponseWire_Resp()     {}
func (*ResponseWire_Parameterlist) isResponseWire_Resp() {}
func (*ResponseWire_Setpoint) isResponseWire_Resp()      {}

func (m *ResponseWire) GetResp() isResponseWire_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *ResponseWire) GetRoot() *RootResponse {
	if x, ok := m.GetResp().(*ResponseWire_Root); ok {
		return x.Root
	}
	return nil
}

func (m *ResponseWire) GetCmdLine() *CommandLineResponse {
	if x, ok := m.GetResp().(*ResponseWire_CmdLine); ok {
		return x.CmdLine
	}
	return nil
}

func (m *ResponseWire) GetList() *ListResponse {
	if x, ok := m.GetResp().(*ResponseWire_List); ok {
		return x.List
	}
	return nil
}

func (m *ResponseWire) GetFirmware() *FirmwareResponse {
	if x, ok := m.GetResp().(*ResponseWire_Firmware); ok {
		return x.Firmware
	}
	return nil
}

func (m *ResponseWire) GetAddress() *AddressResponse {
	if x, ok := m.GetResp().(*ResponseWire_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ResponseWire) GetParameter() *ParameterResponse {
	if x, ok := m.GetResp().(*ResponseWire_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *ResponseWire) GetParameterlist() *ParameterListResponse {
	if x, ok := m.GetResp().(*ResponseWire_Parameterlist); ok {
		return x.Parameterlist
	}
	return nil
}

func (m *ResponseWire) GetSetpoint() *SetpointResponse {
	if x, ok := m.GetResp().(*ResponseWire_Setpoint); ok {
		return x.Setpoint
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResponseWire) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResponseWire_OneofMarshaler, _ResponseWire_OneofUnmarshaler, _ResponseWire_OneofSizer, []interface{}{
		(*ResponseWire_Root)(nil),
		(*ResponseWire_CmdLine)(nil),
		(*ResponseWire_List)(nil),
		(*ResponseWire_Firmware)(nil),
		(*ResponseWire_Address)(nil),
		(*ResponseWire_Parameter)(nil),
		(*ResponseWire_Parameterlist)(nil),
		(*ResponseWire_Setpoint)(nil),
	}
}

func _ResponseWire_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResponseWire)
	// resp
	switch x := m.Resp.(type) {
	case *ResponseWire_Root:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Root); err != nil {
			return err
		}
	case *ResponseWire_CmdLine:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CmdLine); err != nil {
			return err
		}
	case *ResponseWire_List:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *ResponseWire_Firmware:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Firmware); err != nil {
			return err
		}
	case *ResponseWire_Address:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ResponseWire_Parameter:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *ResponseWire_Parameterlist:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameterlist); err != nil {
			return err
		}
	case *ResponseWire_Setpoint:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Setpoint); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResponseWire.Resp has unexpected type %T", x)
	}
	return nil
}

func _ResponseWire_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResponseWire)
	switch tag {
	case 10: // resp.root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Root{msg}
		return true, err
	case 11: // resp.cmdLine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommandLineResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_CmdLine{msg}
		return true, err
	case 12: // resp.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_List{msg}
		return true, err
	case 13: // resp.firmware
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FirmwareResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Firmware{msg}
		return true, err
	case 14: // resp.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AddressResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Address{msg}
		return true, err
	case 15: // resp.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Parameter{msg}
		return true, err
	case 16: // resp.parameterlist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterListResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Parameterlist{msg}
		return true, err
	case 17: // resp.setpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetpointResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Setpoint{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResponseWire_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResponseWire)
	// resp
	switch x := m.Resp.(type) {
	case *ResponseWire_Root:
		s := proto.Size(x.Root)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_CmdLine:
		s := proto.Size(x.CmdLine)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_List:
		s := proto.Size(x.List)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Firmware:
		s := proto.Size(x.Firmware)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Address:
		s := proto.Size(x.Address)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Parameter:
		s := proto.Size(x.Parameter)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Parameterlist:
		s := proto.Size(x.Parameterlist)
		n += proto.SizeVarint(16<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Setpoint:
		s := proto.Size(x.Setpoint)
		n += proto.SizeVarint(17<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ControlRequest struct {
	Req string `protobuf:"bytes,1,opt,name=req" json:"req,omitempty"`
}

func (m *ControlRequest) Reset()                    { *m = ControlRequest{} }
func (m *ControlRequest) String() string            { return proto.CompactTextString(m) }
func (*ControlRequest) ProtoMessage()               {}
func (*ControlRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ControlRequest) GetReq() string {
	if m != nil {
		return m.Req
	}
	return ""
}

type CommandLineRequest struct {
	Stdin string `protobuf:"bytes,1,opt,name=stdin" json:"stdin,omitempty"`
}

func (m *CommandLineRequest) Reset()                    { *m = CommandLineRequest{} }
func (m *CommandLineRequest) String() string            { return proto.CompactTextString(m) }
func (*CommandLineRequest) ProtoMessage()               {}
func (*CommandLineRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommandLineRequest) GetStdin() string {
	if m != nil {
		return m.Stdin
	}
	return ""
}

type CommandLineResponse struct {
	Stderr string `protobuf:"bytes,1,opt,name=stderr" json:"stderr,omitempty"`
	Stdout string `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
}

func (m *CommandLineResponse) Reset()                    { *m = CommandLineResponse{} }
func (m *CommandLineResponse) String() string            { return proto.CompactTextString(m) }
func (*CommandLineResponse) ProtoMessage()               {}
func (*CommandLineResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CommandLineResponse) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *CommandLineResponse) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

type RootCommand struct {
	Device    string `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	Keepalive bool   `protobuf:"varint,2,opt,name=keepalive" json:"keepalive,omitempty"`
	Help      bool   `protobuf:"varint,3,opt,name=help" json:"help,omitempty"`
}

func (m *RootCommand) Reset()                    { *m = RootCommand{} }
func (m *RootCommand) String() string            { return proto.CompactTextString(m) }
func (*RootCommand) ProtoMessage()               {}
func (*RootCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RootCommand) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *RootCommand) GetKeepalive() bool {
	if m != nil {
		return m.Keepalive
	}
	return false
}

func (m *RootCommand) GetHelp() bool {
	if m != nil {
		return m.Help
	}
	return false
}

type RootResponse struct {
	HelpString string `protobuf:"bytes,1,opt,name=helpString" json:"helpString,omitempty"`
	Error      string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *RootResponse) Reset()                    { *m = RootResponse{} }
func (m *RootResponse) String() string            { return proto.CompactTextString(m) }
func (*RootResponse) ProtoMessage()               {}
func (*RootResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RootResponse) GetHelpString() string {
	if m != nil {
		return m.HelpString
	}
	return ""
}

func (m *RootResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListRequest struct {
	Root *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	All  bool         `protobuf:"varint,2,opt,name=all" json:"all,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *ListRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type ListResponse struct {
	DeviceList    []string      `protobuf:"bytes,1,rep,name=deviceList" json:"deviceList,omitempty"`
	DeviceDetails []string      `protobuf:"bytes,2,rep,name=deviceDetails" json:"deviceDetails,omitempty"`
	Root          *RootResponse `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetDeviceList() []string {
	if m != nil {
		return m.DeviceList
	}
	return nil
}

func (m *ListResponse) GetDeviceDetails() []string {
	if m != nil {
		return m.DeviceDetails
	}
	return nil
}

func (m *ListResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type FirmwareRequest struct {
	Root     *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Filename string       `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
}

func (m *FirmwareRequest) Reset()                    { *m = FirmwareRequest{} }
func (m *FirmwareRequest) String() string            { return proto.CompactTextString(m) }
func (*FirmwareRequest) ProtoMessage()               {}
func (*FirmwareRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *FirmwareRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *FirmwareRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type FirmwareResponse struct {
	Version string        `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Root    *RootResponse `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *FirmwareResponse) Reset()                    { *m = FirmwareResponse{} }
func (m *FirmwareResponse) String() string            { return proto.CompactTextString(m) }
func (*FirmwareResponse) ProtoMessage()               {}
func (*FirmwareResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *FirmwareResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *FirmwareResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type HeartbeatRequest struct {
	Root   *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Enable bool         `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
}

func (m *HeartbeatRequest) Reset()                    { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string            { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()               {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *HeartbeatRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *HeartbeatRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type AddressRequest struct {
	Root    *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Address uint32       `protobuf:"varint,2,opt,name=address" json:"address,omitempty"`
}

func (m *AddressRequest) Reset()                    { *m = AddressRequest{} }
func (m *AddressRequest) String() string            { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()               {}
func (*AddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AddressRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *AddressRequest) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

type AddressResponse struct {
	CurrentAddress  uint32        `protobuf:"varint,1,opt,name=currentAddress" json:"currentAddress,omitempty"`
	PreviousAddress uint32        `protobuf:"varint,2,opt,name=previousAddress" json:"previousAddress,omitempty"`
	Root            *RootResponse `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *AddressResponse) Reset()                    { *m = AddressResponse{} }
func (m *AddressResponse) String() string            { return proto.CompactTextString(m) }
func (*AddressResponse) ProtoMessage()               {}
func (*AddressResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AddressResponse) GetCurrentAddress() uint32 {
	if m != nil {
		return m.CurrentAddress
	}
	return 0
}

func (m *AddressResponse) GetPreviousAddress() uint32 {
	if m != nil {
		return m.PreviousAddress
	}
	return 0
}

func (m *AddressResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type ParameterRequest struct {
	Root      *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Parameter ConfigParam  `protobuf:"varint,2,opt,name=parameter,enum=sparkusb.ConfigParam" json:"parameter,omitempty"`
	Value     string       `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *ParameterRequest) Reset()                    { *m = ParameterRequest{} }
func (m *ParameterRequest) String() string            { return proto.CompactTextString(m) }
func (*ParameterRequest) ProtoMessage()               {}
func (*ParameterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ParameterRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *ParameterRequest) GetParameter() ConfigParam {
	if m != nil {
		return m.Parameter
	}
	return ConfigParam_CanID
}

func (m *ParameterRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Not fully yet implemented
type ParameterResponse struct {
	Value        string        `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	OldParameter string        `protobuf:"bytes,2,opt,name=oldParameter" json:"oldParameter,omitempty"`
	NewParameter string        `protobuf:"bytes,3,opt,name=newParameter" json:"newParameter,omitempty"`
	Root         *RootResponse `protobuf:"bytes,4,opt,name=root" json:"root,omitempty"`
}

func (m *ParameterResponse) Reset()                    { *m = ParameterResponse{} }
func (m *ParameterResponse) String() string            { return proto.CompactTextString(m) }
func (*ParameterResponse) ProtoMessage()               {}
func (*ParameterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ParameterResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ParameterResponse) GetOldParameter() string {
	if m != nil {
		return m.OldParameter
	}
	return ""
}

func (m *ParameterResponse) GetNewParameter() string {
	if m != nil {
		return m.NewParameter
	}
	return ""
}

func (m *ParameterResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type ParameterListRequest struct {
	Root *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
}

func (m *ParameterListRequest) Reset()                    { *m = ParameterListRequest{} }
func (m *ParameterListRequest) String() string            { return proto.CompactTextString(m) }
func (*ParameterListRequest) ProtoMessage()               {}
func (*ParameterListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ParameterListRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

type ParameterListResponse struct {
	Parameter []string      `protobuf:"bytes,1,rep,name=parameter" json:"parameter,omitempty"`
	Root      *RootResponse `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *ParameterListResponse) Reset()                    { *m = ParameterListResponse{} }
func (m *ParameterListResponse) String() string            { return proto.CompactTextString(m) }
func (*ParameterListResponse) ProtoMessage()               {}
func (*ParameterListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ParameterListResponse) GetParameter() []string {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *ParameterListResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type SetpointRequest struct {
	Root     *RootCommand `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	Setpoint float32      `protobuf:"fixed32,2,opt,name=setpoint" json:"setpoint,omitempty"`
	Enable   bool         `protobuf:"varint,3,opt,name=enable" json:"enable,omitempty"`
}

func (m *SetpointRequest) Reset()                    { *m = SetpointRequest{} }
func (m *SetpointRequest) String() string            { return proto.CompactTextString(m) }
func (*SetpointRequest) ProtoMessage()               {}
func (*SetpointRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *SetpointRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *SetpointRequest) GetSetpoint() float32 {
	if m != nil {
		return m.Setpoint
	}
	return 0
}

func (m *SetpointRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type SetpointResponse struct {
	Setpoint  float32       `protobuf:"fixed32,1,opt,name=setpoint" json:"setpoint,omitempty"`
	IsRunning bool          `protobuf:"varint,2,opt,name=isRunning" json:"isRunning,omitempty"`
	Root      *RootResponse `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
}

func (m *SetpointResponse) Reset()                    { *m = SetpointResponse{} }
func (m *SetpointResponse) String() string            { return proto.CompactTextString(m) }
func (*SetpointResponse) ProtoMessage()               {}
func (*SetpointResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SetpointResponse) GetSetpoint() float32 {
	if m != nil {
		return m.Setpoint
	}
	return 0
}

func (m *SetpointResponse) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

func (m *SetpointResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestWire)(nil), "sparkusb.RequestWire")
	proto.RegisterType((*ResponseWire)(nil), "sparkusb.ResponseWire")
	proto.RegisterType((*ControlRequest)(nil), "sparkusb.controlRequest")
	proto.RegisterType((*CommandLineRequest)(nil), "sparkusb.commandLineRequest")
	proto.RegisterType((*CommandLineResponse)(nil), "sparkusb.commandLineResponse")
	proto.RegisterType((*RootCommand)(nil), "sparkusb.rootCommand")
	proto.RegisterType((*RootResponse)(nil), "sparkusb.rootResponse")
	proto.RegisterType((*ListRequest)(nil), "sparkusb.listRequest")
	proto.RegisterType((*ListResponse)(nil), "sparkusb.listResponse")
	proto.RegisterType((*FirmwareRequest)(nil), "sparkusb.firmwareRequest")
	proto.RegisterType((*FirmwareResponse)(nil), "sparkusb.firmwareResponse")
	proto.RegisterType((*HeartbeatRequest)(nil), "sparkusb.heartbeatRequest")
	proto.RegisterType((*AddressRequest)(nil), "sparkusb.addressRequest")
	proto.RegisterType((*AddressResponse)(nil), "sparkusb.addressResponse")
	proto.RegisterType((*ParameterRequest)(nil), "sparkusb.parameterRequest")
	proto.RegisterType((*ParameterResponse)(nil), "sparkusb.parameterResponse")
	proto.RegisterType((*ParameterListRequest)(nil), "sparkusb.parameterListRequest")
	proto.RegisterType((*ParameterListResponse)(nil), "sparkusb.parameterListResponse")
	proto.RegisterType((*SetpointRequest)(nil), "sparkusb.setpointRequest")
	proto.RegisterType((*SetpointResponse)(nil), "sparkusb.setpointResponse")
	proto.RegisterEnum("sparkusb.ConfigParam", ConfigParam_name, ConfigParam_value)
	proto.RegisterEnum("sparkusb.MotorType", MotorType_name, MotorType_value)
	proto.RegisterEnum("sparkusb.SensorType", SensorType_name, SensorType_value)
	proto.RegisterEnum("sparkusb.CtrlType", CtrlType_name, CtrlType_value)
	proto.RegisterEnum("sparkusb.IdleMode", IdleMode_name, IdleMode_value)
	proto.RegisterEnum("sparkusb.Faults", Faults_name, Faults_value)
	proto.RegisterEnum("sparkusb.StickyFaults", StickyFaults_name, StickyFaults_value)
}

func init() { proto.RegisterFile("commands.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0x4b, 0x73, 0xdb, 0x36,
	0x10, 0x16, 0xf5, 0xb2, 0xb4, 0x7a, 0xc1, 0x88, 0xe3, 0x61, 0xd3, 0x34, 0xf5, 0x70, 0x3a, 0x8d,
	0xab, 0x66, 0x7c, 0x68, 0xda, 0x69, 0xd2, 0x9e, 0x6c, 0xd9, 0xae, 0xdd, 0xb1, 0x27, 0x1e, 0xb9,
	0x79, 0x5c, 0x61, 0x11, 0xb6, 0x39, 0xa6, 0x08, 0x06, 0x00, 0xe5, 0xfa, 0xd6, 0x63, 0x6f, 0x3d,
	0xf6, 0xd4, 0x53, 0xff, 0x4b, 0x7f, 0x46, 0x7f, 0x4b, 0x07, 0x20, 0x48, 0x90, 0xb4, 0x92, 0xa9,
	0x6e, 0xdc, 0x0f, 0xfb, 0xf8, 0x76, 0xf9, 0x61, 0x29, 0xc1, 0x70, 0xc6, 0xe6, 0x73, 0x12, 0xf9,
	0x62, 0x27, 0xe6, 0x4c, 0x32, 0xdc, 0x11, 0x31, 0xe1, 0x37, 0x89, 0xb8, 0xf0, 0xfe, 0x69, 0x42,
	0x6f, 0x4a, 0xdf, 0x27, 0x54, 0xc8, 0xb7, 0x01, 0xa7, 0xf8, 0x6b, 0x68, 0x72, 0xc6, 0xa4, 0x0b,
	0x5b, 0xce, 0x76, 0xef, 0x9b, 0x87, 0x3b, 0x99, 0xe3, 0x8e, 0x42, 0x27, 0x69, 0x96, 0xa3, 0xda,
	0x54, 0x3b, 0xe1, 0x17, 0xb0, 0x36, 0x9b, 0xfb, 0x27, 0x41, 0x44, 0xdd, 0x9e, 0xf6, 0x7f, 0x6c,
	0xfd, 0x4d, 0x45, 0x75, 0x68, 0xf2, 0x1f, 0xd5, 0xa6, 0x99, 0xbb, 0x2a, 0x13, 0x06, 0x42, 0xba,
	0xfd, 0x6a, 0x19, 0x85, 0x5a, 0x7f, 0xed, 0x84, 0xbf, 0x87, 0xce, 0x65, 0xc0, 0xe7, 0xb7, 0x84,
	0x53, 0x77, 0xa0, 0x03, 0x3e, 0xb1, 0x01, 0xd9, 0x89, 0x0d, 0xca, 0x9d, 0xf1, 0x0f, 0xd0, 0xbd,
	0xa6, 0x84, 0xcb, 0x0b, 0x4a, 0xa4, 0x3b, 0xd4, 0x91, 0x8f, 0x6c, 0x64, 0x7e, 0x64, 0x43, 0xad,
	0x3b, 0xfe, 0x16, 0xd6, 0x88, 0xef, 0x73, 0x2a, 0x84, 0x3b, 0xd2, 0x91, 0xae, 0x8d, 0x34, 0x07,
	0x85, 0xbe, 0x0c, 0xa2, 0x2a, 0xc6, 0x84, 0x93, 0x39, 0x95, 0x94, 0xbb, 0xa8, 0x5a, 0x31, 0x3f,
	0x2a, 0x54, 0xcc, 0x31, 0x7c, 0x08, 0x83, 0xdc, 0x38, 0x51, 0xc3, 0x59, 0xd7, 0xf1, 0x4f, 0x96,
	0xc4, 0x9f, 0x94, 0xa6, 0x54, 0x0e, 0x53, 0xe3, 0x12, 0x54, 0xc6, 0x2c, 0x88, 0xa4, 0x8b, 0xab,
	0xe3, 0xca, 0x4e, 0x0a, 0xe3, 0xca, 0x20, 0xd5, 0xf2, 0x8c, 0x45, 0x92, 0xb3, 0xd0, 0x7d, 0x50,
	0x6d, 0xd9, 0x1c, 0x14, 0x5f, 0x65, 0x8a, 0xec, 0xb5, 0xa0, 0xc1, 0xe9, 0x7b, 0xef, 0xdf, 0x06,
	0xf4, 0xa7, 0x54, 0xc4, 0x2c, 0x12, 0x54, 0x2b, 0xe9, 0x59, 0x49, 0x49, 0x9b, 0x65, 0x25, 0x65,
	0x9e, 0xb9, 0x94, 0x5e, 0x56, 0xa5, 0xf4, 0xd9, 0x07, 0xa4, 0x94, 0xc7, 0xe5, 0x5a, 0x7a, 0x56,
	0xd2, 0xd2, 0x66, 0x55, 0x4b, 0xb6, 0x90, 0x16, 0xd3, 0x8b, 0x7b, 0x62, 0x7a, 0xb4, 0x4c, 0x4c,
	0x79, 0x94, 0x55, 0xd3, 0x77, 0x56, 0x11, 0xc3, 0xea, 0x58, 0x73, 0x45, 0x58, 0x7a, 0x99, 0x24,
	0x7e, 0x2c, 0x4a, 0x22, 0x95, 0xd2, 0xa7, 0x4b, 0x25, 0x91, 0x87, 0x16, 0x34, 0xf1, 0x53, 0x41,
	0x13, 0xba, 0xc9, 0x54, 0x53, 0x9f, 0x7f, 0x50, 0x13, 0x79, 0x92, 0x72, 0x9c, 0x6a, 0x3b, 0x17,
	0xc5, 0x7a, 0xb5, 0x6d, 0x2b, 0x0a, 0xdb, 0x76, 0x86, 0xed, 0xb5, 0xa1, 0xc9, 0xa9, 0x88, 0x3d,
	0x4f, 0x6d, 0x91, 0xa2, 0x08, 0x30, 0xd2, 0x6f, 0xde, 0x75, 0xb6, 0x9c, 0xed, 0xee, 0x54, 0x8b,
	0x60, 0x0c, 0xf8, 0xfe, 0xbd, 0xc7, 0x1b, 0xd0, 0x12, 0xd2, 0x0f, 0x22, 0xe3, 0x99, 0x1a, 0xde,
	0x01, 0x3c, 0x58, 0xf2, 0x62, 0xf1, 0x26, 0xb4, 0x85, 0xf4, 0x29, 0xe7, 0xc6, 0xdb, 0x58, 0x06,
	0x67, 0x89, 0x74, 0xeb, 0x39, 0xce, 0x12, 0xe9, 0xbd, 0x85, 0x5e, 0x61, 0x35, 0x29, 0x37, 0x9f,
	0x2e, 0x82, 0x19, 0xcd, 0xc2, 0x53, 0x0b, 0x3f, 0x86, 0xee, 0x0d, 0xa5, 0x31, 0x09, 0x83, 0x05,
	0xd5, 0x19, 0x3a, 0x53, 0x0b, 0x60, 0x0c, 0xcd, 0x6b, 0x1a, 0xc6, 0x6e, 0x43, 0x1f, 0xe8, 0x67,
	0x6f, 0x1f, 0xfa, 0x45, 0xa5, 0xe2, 0x27, 0x00, 0x0a, 0x3f, 0x97, 0x3c, 0x88, 0xae, 0x4c, 0xf6,
	0x02, 0xa2, 0xba, 0xa4, 0x9c, 0x33, 0x6e, 0xf8, 0xa5, 0x86, 0xf7, 0x33, 0xf4, 0x0a, 0x2b, 0x0d,
	0x7f, 0x65, 0x2e, 0x85, 0xf3, 0x91, 0xf5, 0x6a, 0x6e, 0x04, 0x82, 0x06, 0x09, 0x43, 0xc3, 0x55,
	0x3d, 0x7a, 0xbf, 0x39, 0xd0, 0x2f, 0x6a, 0x5a, 0x51, 0x4a, 0xdb, 0xd3, 0xeb, 0xc2, 0xd9, 0x6a,
	0x28, 0x4a, 0x16, 0xc1, 0x5f, 0xc0, 0x20, 0xb5, 0xf6, 0xa9, 0x24, 0x41, 0x28, 0xdc, 0xba, 0x76,
	0x29, 0x83, 0x78, 0x6c, 0x38, 0x35, 0x3e, 0x76, 0x51, 0x53, 0x52, 0xde, 0x3b, 0x18, 0x55, 0x16,
	0xee, 0x2a, 0x2d, 0x3d, 0x52, 0x77, 0x2f, 0xa4, 0x11, 0x99, 0x53, 0x33, 0xa5, 0xdc, 0xf6, 0xde,
	0x01, 0xaa, 0xde, 0x3e, 0xec, 0xc2, 0xda, 0x82, 0x72, 0x11, 0xb0, 0x4c, 0x3a, 0x99, 0xb9, 0x12,
	0xe7, 0xd7, 0x80, 0xaa, 0xab, 0x7e, 0x15, 0xd2, 0x9b, 0xd0, 0xa6, 0x11, 0xb9, 0x08, 0x33, 0xd9,
	0x18, 0xcb, 0x7b, 0x0d, 0xc3, 0xf2, 0x77, 0x60, 0x95, 0xa4, 0xae, 0xdd, 0x25, 0x2a, 0xeb, 0x20,
	0x5f, 0x17, 0xde, 0x1f, 0x0e, 0x8c, 0x2a, 0xdb, 0x04, 0x7f, 0x09, 0xc3, 0x59, 0xc2, 0x39, 0x8d,
	0xe4, 0xae, 0x09, 0x72, 0x74, 0x50, 0x05, 0xc5, 0xdb, 0x30, 0x8a, 0x39, 0x5d, 0x04, 0x2c, 0x11,
	0xbb, 0xa5, 0xec, 0x55, 0x78, 0xa5, 0xf9, 0xfd, 0xee, 0x00, 0xaa, 0x7e, 0xb9, 0x56, 0xe9, 0xf5,
	0x79, 0x71, 0x01, 0x2a, 0x3e, 0xc3, 0xa2, 0xff, 0x8c, 0x45, 0x97, 0xc1, 0xd5, 0x99, 0x72, 0x28,
	0x2e, 0xbe, 0x0d, 0x68, 0x2d, 0x48, 0x98, 0x50, 0xcd, 0xb0, 0x3b, 0x4d, 0x0d, 0xef, 0x2f, 0x07,
	0xd6, 0xef, 0x6d, 0x4c, 0xeb, 0xeb, 0x14, 0x7c, 0xb1, 0x07, 0x7d, 0x16, 0xfa, 0x67, 0xa5, 0xca,
	0xdd, 0x69, 0x09, 0x53, 0x3e, 0x11, 0xbd, 0xb5, 0x3e, 0x69, 0xb1, 0x12, 0x96, 0x8f, 0xaa, 0xf9,
	0x3f, 0x46, 0xb5, 0x0b, 0x1b, 0xcb, 0xbe, 0xd1, 0x2b, 0x4c, 0xcb, 0x23, 0xf0, 0x70, 0xe9, 0x4a,
	0x57, 0x1b, 0xcc, 0x8e, 0x31, 0xbd, 0xeb, 0x85, 0x79, 0xad, 0xf2, 0x42, 0x63, 0x18, 0x55, 0x7e,
	0x06, 0xac, 0x78, 0x89, 0xf3, 0x2f, 0x89, 0x9a, 0x69, 0xbd, 0xf0, 0x0b, 0xc2, 0xde, 0x95, 0x46,
	0xe9, 0xae, 0xfc, 0x0a, 0xa8, 0xfa, 0x8d, 0x29, 0xe5, 0x71, 0x2a, 0x79, 0x1e, 0x43, 0x37, 0x10,
	0xd3, 0x24, 0x8a, 0xd4, 0xaa, 0x35, 0xdb, 0x3a, 0x07, 0x56, 0xe9, 0x75, 0xfc, 0xa7, 0x03, 0xbd,
	0x82, 0xc4, 0x70, 0x17, 0x5a, 0x13, 0x12, 0x1d, 0xef, 0xa3, 0x1a, 0x1e, 0x40, 0xf7, 0x38, 0x8a,
	0x13, 0x79, 0xca, 0x7c, 0x8a, 0x1c, 0x65, 0x9e, 0x32, 0xc9, 0xf8, 0x2f, 0x77, 0x31, 0x45, 0x75,
	0xdc, 0x83, 0x35, 0xd5, 0xf7, 0xae, 0xbf, 0x40, 0x0d, 0x3c, 0x04, 0x38, 0xa7, 0x91, 0x30, 0x87,
	0x4d, 0xdc, 0x87, 0xce, 0x44, 0xf2, 0x50, 0x5b, 0x2d, 0x65, 0x1d, 0xfb, 0x21, 0xd5, 0x79, 0xda,
	0x78, 0x1d, 0x06, 0x3a, 0xed, 0x3e, 0x25, 0xfe, 0x05, 0x89, 0x7c, 0xb4, 0x86, 0x1f, 0xc0, 0xe8,
	0xd0, 0xec, 0xb6, 0x37, 0xe9, 0x02, 0x43, 0x9d, 0xf1, 0x53, 0xe8, 0xce, 0xb3, 0x7a, 0xaa, 0xda,
	0x1e, 0x4f, 0xc4, 0x35, 0xf5, 0x53, 0x62, 0xda, 0x08, 0xa9, 0x10, 0xc8, 0x19, 0xbf, 0x04, 0x10,
	0x79, 0x71, 0x45, 0xe5, 0x88, 0x84, 0x61, 0x4a, 0x07, 0xd5, 0x54, 0xe4, 0x41, 0x34, 0x63, 0x3e,
	0xe5, 0xc8, 0xb1, 0x3c, 0x75, 0x68, 0x7d, 0xfc, 0x14, 0x3a, 0x33, 0xc3, 0x53, 0x65, 0xdd, 0x4f,
	0xe4, 0xdd, 0xe4, 0x6e, 0x16, 0x52, 0x54, 0x53, 0xa4, 0xdf, 0xd0, 0x90, 0xcd, 0x02, 0x79, 0x87,
	0x9c, 0xf1, 0x16, 0x74, 0x02, 0xd3, 0x82, 0x1e, 0x11, 0x23, 0x42, 0xa2, 0x9a, 0x7a, 0xdc, 0xe3,
	0xe4, 0x86, 0x22, 0x67, 0x2c, 0xa0, 0x7d, 0x49, 0x92, 0x50, 0x0a, 0x15, 0xb9, 0xc7, 0xd9, 0x6d,
	0xc4, 0x12, 0xe5, 0x32, 0x82, 0xde, 0xab, 0x05, 0xe5, 0x66, 0x13, 0x21, 0x27, 0x03, 0x16, 0x2c,
	0x94, 0xe4, 0x4a, 0x4d, 0x72, 0x08, 0xa0, 0x07, 0x7b, 0xa8, 0xc2, 0x51, 0x43, 0x39, 0xa4, 0x24,
	0x53, 0xa0, 0xa9, 0xaa, 0x9c, 0x4b, 0x12, 0x86, 0xa8, 0xa5, 0x48, 0x1e, 0x1c, 0x9c, 0x4d, 0x5f,
	0x9d, 0x4e, 0xa6, 0x13, 0xd4, 0x1e, 0xff, 0xed, 0x40, 0x5f, 0xc8, 0x60, 0x76, 0x73, 0x77, 0x98,
	0xd6, 0xc6, 0x30, 0xcc, 0x6a, 0x9f, 0x6b, 0x1c, 0xd5, 0xf0, 0x43, 0x58, 0x2f, 0x30, 0x30, 0xb0,
	0x93, 0xc1, 0x86, 0x87, 0x81, 0xeb, 0x78, 0x03, 0x90, 0x65, 0x63, 0xd0, 0x86, 0x72, 0x2e, 0x70,
	0x32, 0x70, 0x53, 0x53, 0x55, 0xcc, 0x0c, 0xd0, 0x52, 0x6f, 0x32, 0xe7, 0x67, 0xc0, 0xf6, 0x45,
	0x5b, 0xff, 0xa9, 0x7a, 0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xa1, 0x04, 0x2e, 0x66,
	0x0d, 0x00, 0x00,
}
