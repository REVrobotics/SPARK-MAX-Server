// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commands.proto

package sparkusb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//
// Types of control message to send
type ControlMessage int32

const (
	ControlMessage_controlPing       ControlMessage = 0
	ControlMessage_controlConnect    ControlMessage = 1
	ControlMessage_controlDisconnect ControlMessage = 2
)

var ControlMessage_name = map[int32]string{
	0: "controlPing",
	1: "controlConnect",
	2: "controlDisconnect",
}
var ControlMessage_value = map[string]int32{
	"controlPing":       0,
	"controlConnect":    1,
	"controlDisconnect": 2,
}

func (x ControlMessage) String() string {
	return proto.EnumName(ControlMessage_name, int32(x))
}
func (ControlMessage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{0}
}

//
// Parameter ID for set/get parameter fields
// these values match the SPARK firmware
// @omit THIS ENUM IS AUTO GENERATED FROM SPREADSHEET
type ConfigParam int32

const (
	//
	// CAN ID
	// @default 0
	// @type uint
	ConfigParam_kCanID ConfigParam = 0
	//
	// Input mode, this parameter is read only and the input mode is detected by t
	// he firmware automatically, results are %Input Mode%
	// @default 0
	// @type Input Mode
	ConfigParam_kInputMode ConfigParam = 1
	//
	// Motor Type, options are %Motor Type%
	// @default BRUSHED
	// @type Motor Type
	ConfigParam_kMotorType ConfigParam = 2
	//
	// Electrical degree of offset from the backemf crossing to commutation for se
	// nsorless modes. This is currently not implemented
	// @default 0
	// @type float32
	// @unit Degrees
	ConfigParam_kCommAdvance ConfigParam = 3
	//
	// Sensor Type, options are %Sensor Type%
	// @default HALL_SENSOR
	// @type Sensor Type
	ConfigParam_kSensorType ConfigParam = 4
	//
	// Control Type, this is a read only parameter of the currently active control
	//  type. Options are %Ctrl Type%
	// @default CTRL_DUTY_CYCLE
	// @type Ctrl Type
	ConfigParam_kCtrlType ConfigParam = 5
	//
	// State of the half bridge when the motor controller commands zero output or
	// is disabled. Options are %Idle Mode%
	// @default IDLE_COAST
	// @type Idle Mode
	ConfigParam_kIdleMode ConfigParam = 6
	//
	// Percent of the input which results in zero output
	// @default 0.05
	// @type float32
	// @unit Percent
	ConfigParam_kInputDeadband ConfigParam = 7
	//
	// Read only parameter showing the 32-bit firmware version. The first byte is
	// the major build, the second byte is in the minor build, the last two bytes
	//  are the build
	// @default 0
	// @type Firmware
	ConfigParam_kFirmwareVer ConfigParam = 8
	//
	// Electrical offset of the hall sensor compared to the motor phases in degree
	// s. Typically this is either 0, 60, 120
	// @default 0
	// @type int
	// @unit Degrees
	ConfigParam_kHallOffset ConfigParam = 9
	//
	// Number of pole pairs for the brushless motor. This is the number of poles/2
	//  and can be determined by either counting the number of magents or countin
	// g the number of windings and dividing by 3. This is an important term for
	// speed regulation to properly calculate the speed
	// @default 1
	// @type uint
	ConfigParam_kPolePairs ConfigParam = 10
	//
	// If the half bridge detects this current limit, it will disable the motor dr
	// iver until the current goes below a certain threshold before enabling. Thi
	// s is a low sophistication 'current control'
	// @default 0
	// @type float32
	// @unit Amps
	ConfigParam_kCurrentChop ConfigParam = 11
	//
	// If the half bridge detects this current limit, it will disable the motor dr
	// iver and report a sticky fault. The motor driver will not enable again unt
	// il this fault is cleared.
	// @default 0
	// @type float32
	// @unit Amps
	ConfigParam_kCurrentLimit ConfigParam = 12
	//
	// Perportional gain constant for gain slot 0. In cascaded control modes this
	// is the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kP_0 ConfigParam = 13
	//
	// Integral gain constant for gain slot 0. In cascaded control modes this is t
	// he inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kI_0 ConfigParam = 14
	//
	// Derivative gain constant for gain slot 0. In cascaded control modes this is
	//  the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kD_0 ConfigParam = 15
	//
	// Feed Forward gain constant for gain slot 0. In cascaded control modes this
	// is the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kF_0 ConfigParam = 16
	//
	// Integrator zone constant for gain slot 0. The PIDF loop integrator will onl
	// y accumulate while the setpoint is within IZone of the target. In cascaded
	//  control modes this is the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kIZone_0 ConfigParam = 17
	//
	// PIDF derivative filter constant for gain slot 0. In cascaded control modes
	// this is the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kDFilter_0 ConfigParam = 18
	//
	// Max output constant for gain slot 0. This is the max output of the controll
	// er as well as the max integrator value. In cascaded control modes this is
	// the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kOutputMin_0 ConfigParam = 19
	//
	// Min output constant for gain slot 0. This is the min output of the controll
	// er as well as the min integrator value. In cascaded control modes this is
	// the inner loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kOutputMax_0 ConfigParam = 20
	//
	// Perportional gain constant for gain slot 1. In cascaded control modes this
	// is the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kP_1 ConfigParam = 21
	//
	// Integral gain constant for gain slot 1. In cascaded control modes this is t
	// he inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kI_1 ConfigParam = 22
	//
	// Derivative gain constant for gain slot 1. In cascaded control modes this is
	//  the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kD_1 ConfigParam = 23
	//
	// Feed Forward gain constant for gain slot 1. In cascaded control modes this
	// is the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kF_1 ConfigParam = 24
	//
	// Integrator zone constant for gain slot 1. The PIDF loop integrator will onl
	// y accumulate while the setpoint is within IZone of the target. In cascaded
	//  control modes this is the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kIZone_1 ConfigParam = 25
	//
	// PIDF derivative filter constant for gain slot 1. In cascaded control modes
	// this is the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kDFilter_1 ConfigParam = 26
	//
	// Max output constant for gain slot 1. This is the max output of the controll
	// er as well as the max integrator value. In cascaded control modes this is
	// the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kOutputMin_1 ConfigParam = 27
	//
	// Min output constant for gain slot 1. This is the min output of the controll
	// er as well as the min integrator value. In cascaded control modes this is
	// the inner loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kOutputMax_1 ConfigParam = 28
	//
	// Perportional gain constant for gain slot 3. In cascaded control modes this
	// is the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kP_2 ConfigParam = 29
	//
	// Integral gain constant for gain slot 3. In cascaded control modes this is t
	// he outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kI_2 ConfigParam = 30
	//
	// Derivative gain constant for gain slot 3. In cascaded control modes this is
	//  the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kD_2 ConfigParam = 31
	//
	// Feed Forward gain constant for gain slot 3. In cascaded control modes this
	// is the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kF_2 ConfigParam = 32
	//
	// Integrator zone constant for gain slot 3. The PIDF loop integrator will onl
	// y accumulate while the setpoint is within IZone of the target. In cascaded
	//  control modes this is the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kIZone_2 ConfigParam = 33
	//
	// PIDF derivative filter constant for gain slot 3. In cascaded control modes
	// this is the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kDFilter_2 ConfigParam = 34
	//
	// Max output constant for gain slot 3. This is the max output of the controll
	// er as well as the max integrator value. In cascaded control modes this is
	// the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kOutputMin_2 ConfigParam = 35
	//
	// Min output constant for gain slot 3. This is the min output of the controll
	// er as well as the min integrator value. In cascaded control modes this is
	// the outer loop gain slot 0.
	// @default 0
	// @type float32
	ConfigParam_kOutputMax_2 ConfigParam = 36
	//
	// Perportional gain constant for gain slot 4. In cascaded control modes this
	// is the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kP_3 ConfigParam = 37
	//
	// Integral gain constant for gain slot 4. In cascaded control modes this is t
	// he outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kI_3 ConfigParam = 38
	//
	// Derivative gain constant for gain slot 4. In cascaded control modes this is
	//  the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kD_3 ConfigParam = 39
	//
	// Feed Forward gain constant for gain slot 4. In cascaded control modes this
	// is the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kF_3 ConfigParam = 40
	//
	// Integrator zone constant for gain slot 4. The PIDF loop integrator will onl
	// y accumulate while the setpoint is within IZone of the target. In cascaded
	//  control modes this is the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kIZone_3 ConfigParam = 41
	//
	// PIDF derivative filter constant for gain slot 4. In cascaded control modes
	// this is the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kDFilter_3 ConfigParam = 42
	//
	// Max output constant for gain slot 4. This is the max output of the controll
	// er as well as the max integrator value. In cascaded control modes this is
	// the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kOutputMin_3 ConfigParam = 43
	//
	// Min output constant for gain slot 4. This is the min output of the controll
	// er as well as the min integrator value. In cascaded control modes this is
	// the outer loop gain slot 1.
	// @default 0
	// @type float32
	ConfigParam_kOutputMax_3 ConfigParam = 44
	//
	// Reserved
	// @default 0
	// @type uint
	ConfigParam_kReserved ConfigParam = 45
	//
	// Simple scalar for all units in all closed loop control modes to scale units
	//  to native. Use this to scale the output to things like gear ratios or uni
	// t conversions
	// @default 1
	// @type float32
	ConfigParam_kOutputRatio ConfigParam = 46
	//
	// Low 32-bits of unique 96-bit serial number
	// @default 0
	// @type uint
	ConfigParam_kSerialNumberLow ConfigParam = 47
	//
	// Middle 32-bits of unique 96-bit serial number
	// @default 0
	// @type uint
	ConfigParam_kSerialNumberMid ConfigParam = 48
	//
	// High 32-bits of unique 96-bit serial number
	// @default 0
	// @type uint
	ConfigParam_kSerialNumberHigh ConfigParam = 49
	//
	// Limit switch polarity. Default is Normally Open (1), and can be set to Norm
	// ally Closed (0)
	// @default 1
	// @type bool
	ConfigParam_kLimitSwitchFwdPolarity ConfigParam = 50
	//
	// Limit switch polarity. Default is Normally Open (1), and can be set to Norm
	// ally Closed (0)
	// @default 1
	// @type bool
	ConfigParam_kLimitSwitchRevPolarity ConfigParam = 51
	//
	// Limit switch enable, disabled by default
	// @default 0
	// @type bool
	ConfigParam_kHardLimitFwdEn ConfigParam = 52
	//
	// Limit switch enable, disabled by default
	// @default 0
	// @type bool
	ConfigParam_kHardLimitRevEn ConfigParam = 53
	//
	// Soft limit enable, disabled by default
	// @default 0
	// @type bool
	ConfigParam_kSoftLimitFwdEn ConfigParam = 54
	//
	// Soft limit enable, disabled by default
	// @default 0
	// @type bool
	ConfigParam_kSoftLimitRevEn ConfigParam = 55
	//
	// Voltage ramp rate active for all control modes in V/s, a value of 0 disable
	// s this feature
	// @default 0
	// @type float32
	// @unit V/s
	ConfigParam_kRampRate ConfigParam = 56
)

var ConfigParam_name = map[int32]string{
	0:  "kCanID",
	1:  "kInputMode",
	2:  "kMotorType",
	3:  "kCommAdvance",
	4:  "kSensorType",
	5:  "kCtrlType",
	6:  "kIdleMode",
	7:  "kInputDeadband",
	8:  "kFirmwareVer",
	9:  "kHallOffset",
	10: "kPolePairs",
	11: "kCurrentChop",
	12: "kCurrentLimit",
	13: "kP_0",
	14: "kI_0",
	15: "kD_0",
	16: "kF_0",
	17: "kIZone_0",
	18: "kDFilter_0",
	19: "kOutputMin_0",
	20: "kOutputMax_0",
	21: "kP_1",
	22: "kI_1",
	23: "kD_1",
	24: "kF_1",
	25: "kIZone_1",
	26: "kDFilter_1",
	27: "kOutputMin_1",
	28: "kOutputMax_1",
	29: "kP_2",
	30: "kI_2",
	31: "kD_2",
	32: "kF_2",
	33: "kIZone_2",
	34: "kDFilter_2",
	35: "kOutputMin_2",
	36: "kOutputMax_2",
	37: "kP_3",
	38: "kI_3",
	39: "kD_3",
	40: "kF_3",
	41: "kIZone_3",
	42: "kDFilter_3",
	43: "kOutputMin_3",
	44: "kOutputMax_3",
	45: "kReserved",
	46: "kOutputRatio",
	47: "kSerialNumberLow",
	48: "kSerialNumberMid",
	49: "kSerialNumberHigh",
	50: "kLimitSwitchFwdPolarity",
	51: "kLimitSwitchRevPolarity",
	52: "kHardLimitFwdEn",
	53: "kHardLimitRevEn",
	54: "kSoftLimitFwdEn",
	55: "kSoftLimitRevEn",
	56: "kRampRate",
}
var ConfigParam_value = map[string]int32{
	"kCanID":                  0,
	"kInputMode":              1,
	"kMotorType":              2,
	"kCommAdvance":            3,
	"kSensorType":             4,
	"kCtrlType":               5,
	"kIdleMode":               6,
	"kInputDeadband":          7,
	"kFirmwareVer":            8,
	"kHallOffset":             9,
	"kPolePairs":              10,
	"kCurrentChop":            11,
	"kCurrentLimit":           12,
	"kP_0":                    13,
	"kI_0":                    14,
	"kD_0":                    15,
	"kF_0":                    16,
	"kIZone_0":                17,
	"kDFilter_0":              18,
	"kOutputMin_0":            19,
	"kOutputMax_0":            20,
	"kP_1":                    21,
	"kI_1":                    22,
	"kD_1":                    23,
	"kF_1":                    24,
	"kIZone_1":                25,
	"kDFilter_1":              26,
	"kOutputMin_1":            27,
	"kOutputMax_1":            28,
	"kP_2":                    29,
	"kI_2":                    30,
	"kD_2":                    31,
	"kF_2":                    32,
	"kIZone_2":                33,
	"kDFilter_2":              34,
	"kOutputMin_2":            35,
	"kOutputMax_2":            36,
	"kP_3":                    37,
	"kI_3":                    38,
	"kD_3":                    39,
	"kF_3":                    40,
	"kIZone_3":                41,
	"kDFilter_3":              42,
	"kOutputMin_3":            43,
	"kOutputMax_3":            44,
	"kReserved":               45,
	"kOutputRatio":            46,
	"kSerialNumberLow":        47,
	"kSerialNumberMid":        48,
	"kSerialNumberHigh":       49,
	"kLimitSwitchFwdPolarity": 50,
	"kLimitSwitchRevPolarity": 51,
	"kHardLimitFwdEn":         52,
	"kHardLimitRevEn":         53,
	"kSoftLimitFwdEn":         54,
	"kSoftLimitRevEn":         55,
	"kRampRate":               56,
}

func (x ConfigParam) String() string {
	return proto.EnumName(ConfigParam_name, int32(x))
}
func (ConfigParam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{1}
}

//
// Motor type enum, these values match the SPARK firmware
type MotorType int32

const (
	MotorType_Brushed   MotorType = 0
	MotorType_Brushless MotorType = 1
)

var MotorType_name = map[int32]string{
	0: "Brushed",
	1: "Brushless",
}
var MotorType_value = map[string]int32{
	"Brushed":   0,
	"Brushless": 1,
}

func (x MotorType) String() string {
	return proto.EnumName(MotorType_name, int32(x))
}
func (MotorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{2}
}

//
// Sensor type enum, these values match the SPARK firmware
type SensorType int32

const (
	SensorType_HallSensor SensorType = 0
	SensorType_Encoder    SensorType = 1
	SensorType_Sensorless SensorType = 2
)

var SensorType_name = map[int32]string{
	0: "HallSensor",
	1: "Encoder",
	2: "Sensorless",
}
var SensorType_value = map[string]int32{
	"HallSensor": 0,
	"Encoder":    1,
	"Sensorless": 2,
}

func (x SensorType) String() string {
	return proto.EnumName(SensorType_name, int32(x))
}
func (SensorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{3}
}

//
// Control type enum, these values match the SPARK firmware
type CtrlType int32

const (
	CtrlType_DutyCycle CtrlType = 0
	CtrlType_Velocity  CtrlType = 1
)

var CtrlType_name = map[int32]string{
	0: "DutyCycle",
	1: "Velocity",
}
var CtrlType_value = map[string]int32{
	"DutyCycle": 0,
	"Velocity":  1,
}

func (x CtrlType) String() string {
	return proto.EnumName(CtrlType_name, int32(x))
}
func (CtrlType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{4}
}

//
// Idle mode type enum, these values match the SPARK firmware
type IdleMode int32

const (
	IdleMode_Coast IdleMode = 0
	IdleMode_Brake IdleMode = 1
)

var IdleMode_name = map[int32]string{
	0: "Coast",
	1: "Brake",
}
var IdleMode_value = map[string]int32{
	"Coast": 0,
	"Brake": 1,
}

func (x IdleMode) String() string {
	return proto.EnumName(IdleMode_name, int32(x))
}
func (IdleMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{5}
}

//
// Faults type enum, these values match the SPARK firmware
type Faults int32

const (
	Faults_Brownout    Faults = 0
	Faults_Overcurrent Faults = 1
	Faults_Overvoltage Faults = 2
	Faults_MotorFault  Faults = 3
	Faults_SensorFault Faults = 4
	Faults_Stall       Faults = 5
	Faults_EEPROMCRC   Faults = 6
)

var Faults_name = map[int32]string{
	0: "Brownout",
	1: "Overcurrent",
	2: "Overvoltage",
	3: "MotorFault",
	4: "SensorFault",
	5: "Stall",
	6: "EEPROMCRC",
}
var Faults_value = map[string]int32{
	"Brownout":    0,
	"Overcurrent": 1,
	"Overvoltage": 2,
	"MotorFault":  3,
	"SensorFault": 4,
	"Stall":       5,
	"EEPROMCRC":   6,
}

func (x Faults) String() string {
	return proto.EnumName(Faults_name, int32(x))
}
func (Faults) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{6}
}

//
// Sticky type enum, these values match the SPARK firmware
type StickyFaults int32

const (
	StickyFaults_BrownoutSticky    StickyFaults = 0
	StickyFaults_OvercurrentSticky StickyFaults = 1
	StickyFaults_OvervoltageSticky StickyFaults = 2
	StickyFaults_MotorFaultSticky  StickyFaults = 3
	StickyFaults_SensorFaultSticky StickyFaults = 4
	StickyFaults_StallSticky       StickyFaults = 5
	StickyFaults_EEPROMCRCSticky   StickyFaults = 6
)

var StickyFaults_name = map[int32]string{
	0: "BrownoutSticky",
	1: "OvercurrentSticky",
	2: "OvervoltageSticky",
	3: "MotorFaultSticky",
	4: "SensorFaultSticky",
	5: "StallSticky",
	6: "EEPROMCRCSticky",
}
var StickyFaults_value = map[string]int32{
	"BrownoutSticky":    0,
	"OvercurrentSticky": 1,
	"OvervoltageSticky": 2,
	"MotorFaultSticky":  3,
	"SensorFaultSticky": 4,
	"StallSticky":       5,
	"EEPROMCRCSticky":   6,
}

func (x StickyFaults) String() string {
	return proto.EnumName(StickyFaults_name, int32(x))
}
func (StickyFaults) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{7}
}

//
// Parameter type enum, these values match the SPARK firmware
// and are sent as a response in GetParameter() requests
type ParamType int32

const (
	ParamType_int32   ParamType = 0
	ParamType_uint32  ParamType = 1
	ParamType_float32 ParamType = 2
	ParamType_bool    ParamType = 3
)

var ParamType_name = map[int32]string{
	0: "int32",
	1: "uint32",
	2: "float32",
	3: "bool",
}
var ParamType_value = map[string]int32{
	"int32":   0,
	"uint32":  1,
	"float32": 2,
	"bool":    3,
}

func (x ParamType) String() string {
	return proto.EnumName(ParamType_name, int32(x))
}
func (ParamType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{8}
}

//
// Data format to send over 0mq containing one request
type RequestWire struct {
	// Types that are valid to be assigned to Req:
	//	*RequestWire_Root
	//	*RequestWire_CmdLine
	//	*RequestWire_List
	//	*RequestWire_Firmware
	//	*RequestWire_Heartbeat
	//	*RequestWire_Address
	//	*RequestWire_Parameter
	//	*RequestWire_ParameterList
	//	*RequestWire_Setpoint
	//	*RequestWire_Control
	//	*RequestWire_Follower
	//	*RequestWire_Burn
	Req                  isRequestWire_Req `protobuf_oneof:"req"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RequestWire) Reset()         { *m = RequestWire{} }
func (m *RequestWire) String() string { return proto.CompactTextString(m) }
func (*RequestWire) ProtoMessage()    {}
func (*RequestWire) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{0}
}
func (m *RequestWire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestWire.Unmarshal(m, b)
}
func (m *RequestWire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestWire.Marshal(b, m, deterministic)
}
func (dst *RequestWire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestWire.Merge(dst, src)
}
func (m *RequestWire) XXX_Size() int {
	return xxx_messageInfo_RequestWire.Size(m)
}
func (m *RequestWire) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestWire.DiscardUnknown(m)
}

var xxx_messageInfo_RequestWire proto.InternalMessageInfo

type isRequestWire_Req interface {
	isRequestWire_Req()
}

type RequestWire_Root struct {
	Root *RootCommand `protobuf:"bytes,10,opt,name=root,proto3,oneof"`
}

type RequestWire_CmdLine struct {
	CmdLine *CommandLineRequest `protobuf:"bytes,11,opt,name=cmdLine,proto3,oneof"`
}

type RequestWire_List struct {
	List *ListRequest `protobuf:"bytes,12,opt,name=list,proto3,oneof"`
}

type RequestWire_Firmware struct {
	Firmware *FirmwareRequest `protobuf:"bytes,13,opt,name=firmware,proto3,oneof"`
}

type RequestWire_Heartbeat struct {
	Heartbeat *HeartbeatRequest `protobuf:"bytes,14,opt,name=heartbeat,proto3,oneof"`
}

type RequestWire_Address struct {
	Address *AddressRequest `protobuf:"bytes,15,opt,name=address,proto3,oneof"`
}

type RequestWire_Parameter struct {
	Parameter *ParameterRequest `protobuf:"bytes,16,opt,name=parameter,proto3,oneof"`
}

type RequestWire_ParameterList struct {
	ParameterList *ParameterListRequest `protobuf:"bytes,17,opt,name=parameterList,proto3,oneof"`
}

type RequestWire_Setpoint struct {
	Setpoint *SetpointRequest `protobuf:"bytes,18,opt,name=setpoint,proto3,oneof"`
}

type RequestWire_Control struct {
	Control *ControlRequest `protobuf:"bytes,19,opt,name=control,proto3,oneof"`
}

type RequestWire_Follower struct {
	Follower *FollowerRequest `protobuf:"bytes,20,opt,name=follower,proto3,oneof"`
}

type RequestWire_Burn struct {
	Burn *BurnRequest `protobuf:"bytes,21,opt,name=burn,proto3,oneof"`
}

func (*RequestWire_Root) isRequestWire_Req() {}

func (*RequestWire_CmdLine) isRequestWire_Req() {}

func (*RequestWire_List) isRequestWire_Req() {}

func (*RequestWire_Firmware) isRequestWire_Req() {}

func (*RequestWire_Heartbeat) isRequestWire_Req() {}

func (*RequestWire_Address) isRequestWire_Req() {}

func (*RequestWire_Parameter) isRequestWire_Req() {}

func (*RequestWire_ParameterList) isRequestWire_Req() {}

func (*RequestWire_Setpoint) isRequestWire_Req() {}

func (*RequestWire_Control) isRequestWire_Req() {}

func (*RequestWire_Follower) isRequestWire_Req() {}

func (*RequestWire_Burn) isRequestWire_Req() {}

func (m *RequestWire) GetReq() isRequestWire_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *RequestWire) GetRoot() *RootCommand {
	if x, ok := m.GetReq().(*RequestWire_Root); ok {
		return x.Root
	}
	return nil
}

func (m *RequestWire) GetCmdLine() *CommandLineRequest {
	if x, ok := m.GetReq().(*RequestWire_CmdLine); ok {
		return x.CmdLine
	}
	return nil
}

func (m *RequestWire) GetList() *ListRequest {
	if x, ok := m.GetReq().(*RequestWire_List); ok {
		return x.List
	}
	return nil
}

func (m *RequestWire) GetFirmware() *FirmwareRequest {
	if x, ok := m.GetReq().(*RequestWire_Firmware); ok {
		return x.Firmware
	}
	return nil
}

func (m *RequestWire) GetHeartbeat() *HeartbeatRequest {
	if x, ok := m.GetReq().(*RequestWire_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *RequestWire) GetAddress() *AddressRequest {
	if x, ok := m.GetReq().(*RequestWire_Address); ok {
		return x.Address
	}
	return nil
}

func (m *RequestWire) GetParameter() *ParameterRequest {
	if x, ok := m.GetReq().(*RequestWire_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *RequestWire) GetParameterList() *ParameterListRequest {
	if x, ok := m.GetReq().(*RequestWire_ParameterList); ok {
		return x.ParameterList
	}
	return nil
}

func (m *RequestWire) GetSetpoint() *SetpointRequest {
	if x, ok := m.GetReq().(*RequestWire_Setpoint); ok {
		return x.Setpoint
	}
	return nil
}

func (m *RequestWire) GetControl() *ControlRequest {
	if x, ok := m.GetReq().(*RequestWire_Control); ok {
		return x.Control
	}
	return nil
}

func (m *RequestWire) GetFollower() *FollowerRequest {
	if x, ok := m.GetReq().(*RequestWire_Follower); ok {
		return x.Follower
	}
	return nil
}

func (m *RequestWire) GetBurn() *BurnRequest {
	if x, ok := m.GetReq().(*RequestWire_Burn); ok {
		return x.Burn
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestWire) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestWire_OneofMarshaler, _RequestWire_OneofUnmarshaler, _RequestWire_OneofSizer, []interface{}{
		(*RequestWire_Root)(nil),
		(*RequestWire_CmdLine)(nil),
		(*RequestWire_List)(nil),
		(*RequestWire_Firmware)(nil),
		(*RequestWire_Heartbeat)(nil),
		(*RequestWire_Address)(nil),
		(*RequestWire_Parameter)(nil),
		(*RequestWire_ParameterList)(nil),
		(*RequestWire_Setpoint)(nil),
		(*RequestWire_Control)(nil),
		(*RequestWire_Follower)(nil),
		(*RequestWire_Burn)(nil),
	}
}

func _RequestWire_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestWire)
	// req
	switch x := m.Req.(type) {
	case *RequestWire_Root:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Root); err != nil {
			return err
		}
	case *RequestWire_CmdLine:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CmdLine); err != nil {
			return err
		}
	case *RequestWire_List:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *RequestWire_Firmware:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Firmware); err != nil {
			return err
		}
	case *RequestWire_Heartbeat:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Heartbeat); err != nil {
			return err
		}
	case *RequestWire_Address:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *RequestWire_Parameter:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *RequestWire_ParameterList:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ParameterList); err != nil {
			return err
		}
	case *RequestWire_Setpoint:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Setpoint); err != nil {
			return err
		}
	case *RequestWire_Control:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Control); err != nil {
			return err
		}
	case *RequestWire_Follower:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Follower); err != nil {
			return err
		}
	case *RequestWire_Burn:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Burn); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestWire.Req has unexpected type %T", x)
	}
	return nil
}

func _RequestWire_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestWire)
	switch tag {
	case 10: // req.root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootCommand)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Root{msg}
		return true, err
	case 11: // req.cmdLine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommandLineRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_CmdLine{msg}
		return true, err
	case 12: // req.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_List{msg}
		return true, err
	case 13: // req.firmware
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FirmwareRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Firmware{msg}
		return true, err
	case 14: // req.heartbeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeartbeatRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Heartbeat{msg}
		return true, err
	case 15: // req.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AddressRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Address{msg}
		return true, err
	case 16: // req.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Parameter{msg}
		return true, err
	case 17: // req.parameterList
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterListRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_ParameterList{msg}
		return true, err
	case 18: // req.setpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetpointRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Setpoint{msg}
		return true, err
	case 19: // req.control
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ControlRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Control{msg}
		return true, err
	case 20: // req.follower
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FollowerRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Follower{msg}
		return true, err
	case 21: // req.burn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BurnRequest)
		err := b.DecodeMessage(msg)
		m.Req = &RequestWire_Burn{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestWire_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestWire)
	// req
	switch x := m.Req.(type) {
	case *RequestWire_Root:
		s := proto.Size(x.Root)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_CmdLine:
		s := proto.Size(x.CmdLine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_List:
		s := proto.Size(x.List)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Firmware:
		s := proto.Size(x.Firmware)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Heartbeat:
		s := proto.Size(x.Heartbeat)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Parameter:
		s := proto.Size(x.Parameter)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_ParameterList:
		s := proto.Size(x.ParameterList)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Setpoint:
		s := proto.Size(x.Setpoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Control:
		s := proto.Size(x.Control)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Follower:
		s := proto.Size(x.Follower)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestWire_Burn:
		s := proto.Size(x.Burn)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//
// Data format to recieve over 0mq containting one response
type ResponseWire struct {
	// Types that are valid to be assigned to Resp:
	//	*ResponseWire_Root
	//	*ResponseWire_CmdLine
	//	*ResponseWire_List
	//	*ResponseWire_Firmware
	//	*ResponseWire_Address
	//	*ResponseWire_Parameter
	//	*ResponseWire_Parameterlist
	//	*ResponseWire_Setpoint
	//	*ResponseWire_Control
	//	*ResponseWire_Burn
	Resp                 isResponseWire_Resp `protobuf_oneof:"resp"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ResponseWire) Reset()         { *m = ResponseWire{} }
func (m *ResponseWire) String() string { return proto.CompactTextString(m) }
func (*ResponseWire) ProtoMessage()    {}
func (*ResponseWire) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{1}
}
func (m *ResponseWire) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseWire.Unmarshal(m, b)
}
func (m *ResponseWire) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseWire.Marshal(b, m, deterministic)
}
func (dst *ResponseWire) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseWire.Merge(dst, src)
}
func (m *ResponseWire) XXX_Size() int {
	return xxx_messageInfo_ResponseWire.Size(m)
}
func (m *ResponseWire) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseWire.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseWire proto.InternalMessageInfo

type isResponseWire_Resp interface {
	isResponseWire_Resp()
}

type ResponseWire_Root struct {
	Root *RootResponse `protobuf:"bytes,10,opt,name=root,proto3,oneof"`
}

type ResponseWire_CmdLine struct {
	CmdLine *CommandLineResponse `protobuf:"bytes,11,opt,name=cmdLine,proto3,oneof"`
}

type ResponseWire_List struct {
	List *ListResponse `protobuf:"bytes,12,opt,name=list,proto3,oneof"`
}

type ResponseWire_Firmware struct {
	Firmware *FirmwareResponse `protobuf:"bytes,13,opt,name=firmware,proto3,oneof"`
}

type ResponseWire_Address struct {
	Address *AddressResponse `protobuf:"bytes,14,opt,name=address,proto3,oneof"`
}

type ResponseWire_Parameter struct {
	Parameter *ParameterResponse `protobuf:"bytes,15,opt,name=parameter,proto3,oneof"`
}

type ResponseWire_Parameterlist struct {
	Parameterlist *ParameterListResponse `protobuf:"bytes,16,opt,name=parameterlist,proto3,oneof"`
}

type ResponseWire_Setpoint struct {
	Setpoint *SetpointResponse `protobuf:"bytes,17,opt,name=setpoint,proto3,oneof"`
}

type ResponseWire_Control struct {
	Control *ControlResponse `protobuf:"bytes,18,opt,name=control,proto3,oneof"`
}

type ResponseWire_Burn struct {
	Burn *BurnResponse `protobuf:"bytes,19,opt,name=burn,proto3,oneof"`
}

func (*ResponseWire_Root) isResponseWire_Resp() {}

func (*ResponseWire_CmdLine) isResponseWire_Resp() {}

func (*ResponseWire_List) isResponseWire_Resp() {}

func (*ResponseWire_Firmware) isResponseWire_Resp() {}

func (*ResponseWire_Address) isResponseWire_Resp() {}

func (*ResponseWire_Parameter) isResponseWire_Resp() {}

func (*ResponseWire_Parameterlist) isResponseWire_Resp() {}

func (*ResponseWire_Setpoint) isResponseWire_Resp() {}

func (*ResponseWire_Control) isResponseWire_Resp() {}

func (*ResponseWire_Burn) isResponseWire_Resp() {}

func (m *ResponseWire) GetResp() isResponseWire_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *ResponseWire) GetRoot() *RootResponse {
	if x, ok := m.GetResp().(*ResponseWire_Root); ok {
		return x.Root
	}
	return nil
}

func (m *ResponseWire) GetCmdLine() *CommandLineResponse {
	if x, ok := m.GetResp().(*ResponseWire_CmdLine); ok {
		return x.CmdLine
	}
	return nil
}

func (m *ResponseWire) GetList() *ListResponse {
	if x, ok := m.GetResp().(*ResponseWire_List); ok {
		return x.List
	}
	return nil
}

func (m *ResponseWire) GetFirmware() *FirmwareResponse {
	if x, ok := m.GetResp().(*ResponseWire_Firmware); ok {
		return x.Firmware
	}
	return nil
}

func (m *ResponseWire) GetAddress() *AddressResponse {
	if x, ok := m.GetResp().(*ResponseWire_Address); ok {
		return x.Address
	}
	return nil
}

func (m *ResponseWire) GetParameter() *ParameterResponse {
	if x, ok := m.GetResp().(*ResponseWire_Parameter); ok {
		return x.Parameter
	}
	return nil
}

func (m *ResponseWire) GetParameterlist() *ParameterListResponse {
	if x, ok := m.GetResp().(*ResponseWire_Parameterlist); ok {
		return x.Parameterlist
	}
	return nil
}

func (m *ResponseWire) GetSetpoint() *SetpointResponse {
	if x, ok := m.GetResp().(*ResponseWire_Setpoint); ok {
		return x.Setpoint
	}
	return nil
}

func (m *ResponseWire) GetControl() *ControlResponse {
	if x, ok := m.GetResp().(*ResponseWire_Control); ok {
		return x.Control
	}
	return nil
}

func (m *ResponseWire) GetBurn() *BurnResponse {
	if x, ok := m.GetResp().(*ResponseWire_Burn); ok {
		return x.Burn
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResponseWire) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResponseWire_OneofMarshaler, _ResponseWire_OneofUnmarshaler, _ResponseWire_OneofSizer, []interface{}{
		(*ResponseWire_Root)(nil),
		(*ResponseWire_CmdLine)(nil),
		(*ResponseWire_List)(nil),
		(*ResponseWire_Firmware)(nil),
		(*ResponseWire_Address)(nil),
		(*ResponseWire_Parameter)(nil),
		(*ResponseWire_Parameterlist)(nil),
		(*ResponseWire_Setpoint)(nil),
		(*ResponseWire_Control)(nil),
		(*ResponseWire_Burn)(nil),
	}
}

func _ResponseWire_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResponseWire)
	// resp
	switch x := m.Resp.(type) {
	case *ResponseWire_Root:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Root); err != nil {
			return err
		}
	case *ResponseWire_CmdLine:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CmdLine); err != nil {
			return err
		}
	case *ResponseWire_List:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *ResponseWire_Firmware:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Firmware); err != nil {
			return err
		}
	case *ResponseWire_Address:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Address); err != nil {
			return err
		}
	case *ResponseWire_Parameter:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameter); err != nil {
			return err
		}
	case *ResponseWire_Parameterlist:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Parameterlist); err != nil {
			return err
		}
	case *ResponseWire_Setpoint:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Setpoint); err != nil {
			return err
		}
	case *ResponseWire_Control:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Control); err != nil {
			return err
		}
	case *ResponseWire_Burn:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Burn); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResponseWire.Resp has unexpected type %T", x)
	}
	return nil
}

func _ResponseWire_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResponseWire)
	switch tag {
	case 10: // resp.root
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Root{msg}
		return true, err
	case 11: // resp.cmdLine
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommandLineResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_CmdLine{msg}
		return true, err
	case 12: // resp.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ListResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_List{msg}
		return true, err
	case 13: // resp.firmware
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FirmwareResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Firmware{msg}
		return true, err
	case 14: // resp.address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AddressResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Address{msg}
		return true, err
	case 15: // resp.parameter
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Parameter{msg}
		return true, err
	case 16: // resp.parameterlist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParameterListResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Parameterlist{msg}
		return true, err
	case 17: // resp.setpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetpointResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Setpoint{msg}
		return true, err
	case 18: // resp.control
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ControlResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Control{msg}
		return true, err
	case 19: // resp.burn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BurnResponse)
		err := b.DecodeMessage(msg)
		m.Resp = &ResponseWire_Burn{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResponseWire_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResponseWire)
	// resp
	switch x := m.Resp.(type) {
	case *ResponseWire_Root:
		s := proto.Size(x.Root)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_CmdLine:
		s := proto.Size(x.CmdLine)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_List:
		s := proto.Size(x.List)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Firmware:
		s := proto.Size(x.Firmware)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Address:
		s := proto.Size(x.Address)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Parameter:
		s := proto.Size(x.Parameter)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Parameterlist:
		s := proto.Size(x.Parameterlist)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Setpoint:
		s := proto.Size(x.Setpoint)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Control:
		s := proto.Size(x.Control)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResponseWire_Burn:
		s := proto.Size(x.Burn)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//
// Request format for connect() disconnect() and ping()
type ControlRequest struct {
	Ctrl                 ControlMessage `protobuf:"varint,1,opt,name=ctrl,proto3,enum=sparkusb.ControlMessage" json:"ctrl,omitempty"`
	Device               string         `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ControlRequest) Reset()         { *m = ControlRequest{} }
func (m *ControlRequest) String() string { return proto.CompactTextString(m) }
func (*ControlRequest) ProtoMessage()    {}
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{2}
}
func (m *ControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlRequest.Unmarshal(m, b)
}
func (m *ControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlRequest.Marshal(b, m, deterministic)
}
func (dst *ControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlRequest.Merge(dst, src)
}
func (m *ControlRequest) XXX_Size() int {
	return xxx_messageInfo_ControlRequest.Size(m)
}
func (m *ControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ControlRequest proto.InternalMessageInfo

func (m *ControlRequest) GetCtrl() ControlMessage {
	if m != nil {
		return m.Ctrl
	}
	return ControlMessage_controlPing
}

func (m *ControlRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

//
// Burn command
type BurnRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Verify               bool         `protobuf:"varint,2,opt,name=verify,proto3" json:"verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BurnRequest) Reset()         { *m = BurnRequest{} }
func (m *BurnRequest) String() string { return proto.CompactTextString(m) }
func (*BurnRequest) ProtoMessage()    {}
func (*BurnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{3}
}
func (m *BurnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnRequest.Unmarshal(m, b)
}
func (m *BurnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnRequest.Marshal(b, m, deterministic)
}
func (dst *BurnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnRequest.Merge(dst, src)
}
func (m *BurnRequest) XXX_Size() int {
	return xxx_messageInfo_BurnRequest.Size(m)
}
func (m *BurnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BurnRequest proto.InternalMessageInfo

func (m *BurnRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *BurnRequest) GetVerify() bool {
	if m != nil {
		return m.Verify
	}
	return false
}

type BurnResponse struct {
	Root                 *RootResponse `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Verify               bool          `protobuf:"varint,2,opt,name=verify,proto3" json:"verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *BurnResponse) Reset()         { *m = BurnResponse{} }
func (m *BurnResponse) String() string { return proto.CompactTextString(m) }
func (*BurnResponse) ProtoMessage()    {}
func (*BurnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{4}
}
func (m *BurnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BurnResponse.Unmarshal(m, b)
}
func (m *BurnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BurnResponse.Marshal(b, m, deterministic)
}
func (dst *BurnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BurnResponse.Merge(dst, src)
}
func (m *BurnResponse) XXX_Size() int {
	return xxx_messageInfo_BurnResponse.Size(m)
}
func (m *BurnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BurnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BurnResponse proto.InternalMessageInfo

func (m *BurnResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *BurnResponse) GetVerify() bool {
	if m != nil {
		return m.Verify
	}
	return false
}

//
// Response format for connect() disconnect() and ping()
type ControlResponse struct {
	Connected            bool     `protobuf:"varint,1,opt,name=connected,proto3" json:"connected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ControlResponse) Reset()         { *m = ControlResponse{} }
func (m *ControlResponse) String() string { return proto.CompactTextString(m) }
func (*ControlResponse) ProtoMessage()    {}
func (*ControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{5}
}
func (m *ControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlResponse.Unmarshal(m, b)
}
func (m *ControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlResponse.Marshal(b, m, deterministic)
}
func (dst *ControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlResponse.Merge(dst, src)
}
func (m *ControlResponse) XXX_Size() int {
	return xxx_messageInfo_ControlResponse.Size(m)
}
func (m *ControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ControlResponse proto.InternalMessageInfo

func (m *ControlResponse) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

type CommandLineRequest struct {
	Stdin                string   `protobuf:"bytes,1,opt,name=stdin,proto3" json:"stdin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandLineRequest) Reset()         { *m = CommandLineRequest{} }
func (m *CommandLineRequest) String() string { return proto.CompactTextString(m) }
func (*CommandLineRequest) ProtoMessage()    {}
func (*CommandLineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{6}
}
func (m *CommandLineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandLineRequest.Unmarshal(m, b)
}
func (m *CommandLineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandLineRequest.Marshal(b, m, deterministic)
}
func (dst *CommandLineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandLineRequest.Merge(dst, src)
}
func (m *CommandLineRequest) XXX_Size() int {
	return xxx_messageInfo_CommandLineRequest.Size(m)
}
func (m *CommandLineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandLineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommandLineRequest proto.InternalMessageInfo

func (m *CommandLineRequest) GetStdin() string {
	if m != nil {
		return m.Stdin
	}
	return ""
}

type CommandLineResponse struct {
	Stderr               string   `protobuf:"bytes,1,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Stdout               string   `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandLineResponse) Reset()         { *m = CommandLineResponse{} }
func (m *CommandLineResponse) String() string { return proto.CompactTextString(m) }
func (*CommandLineResponse) ProtoMessage()    {}
func (*CommandLineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{7}
}
func (m *CommandLineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandLineResponse.Unmarshal(m, b)
}
func (m *CommandLineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandLineResponse.Marshal(b, m, deterministic)
}
func (dst *CommandLineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandLineResponse.Merge(dst, src)
}
func (m *CommandLineResponse) XXX_Size() int {
	return xxx_messageInfo_CommandLineResponse.Size(m)
}
func (m *CommandLineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandLineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandLineResponse proto.InternalMessageInfo

func (m *CommandLineResponse) GetStderr() string {
	if m != nil {
		return m.Stderr
	}
	return ""
}

func (m *CommandLineResponse) GetStdout() string {
	if m != nil {
		return m.Stdout
	}
	return ""
}

//
// All RPC services implement this request
// keepalive and help are not implemented
type RootCommand struct {
	Device               string   `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Keepalive            bool     `protobuf:"varint,2,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	Help                 bool     `protobuf:"varint,3,opt,name=help,proto3" json:"help,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootCommand) Reset()         { *m = RootCommand{} }
func (m *RootCommand) String() string { return proto.CompactTextString(m) }
func (*RootCommand) ProtoMessage()    {}
func (*RootCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{8}
}
func (m *RootCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootCommand.Unmarshal(m, b)
}
func (m *RootCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootCommand.Marshal(b, m, deterministic)
}
func (dst *RootCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootCommand.Merge(dst, src)
}
func (m *RootCommand) XXX_Size() int {
	return xxx_messageInfo_RootCommand.Size(m)
}
func (m *RootCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_RootCommand.DiscardUnknown(m)
}

var xxx_messageInfo_RootCommand proto.InternalMessageInfo

func (m *RootCommand) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *RootCommand) GetKeepalive() bool {
	if m != nil {
		return m.Keepalive
	}
	return false
}

func (m *RootCommand) GetHelp() bool {
	if m != nil {
		return m.Help
	}
	return false
}

//
// All RPC services implement this response
// helpString not implemented
type RootResponse struct {
	HelpString           string   `protobuf:"bytes,1,opt,name=helpString,proto3" json:"helpString,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootResponse) Reset()         { *m = RootResponse{} }
func (m *RootResponse) String() string { return proto.CompactTextString(m) }
func (*RootResponse) ProtoMessage()    {}
func (*RootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{9}
}
func (m *RootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootResponse.Unmarshal(m, b)
}
func (m *RootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootResponse.Marshal(b, m, deterministic)
}
func (dst *RootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootResponse.Merge(dst, src)
}
func (m *RootResponse) XXX_Size() int {
	return xxx_messageInfo_RootResponse.Size(m)
}
func (m *RootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RootResponse proto.InternalMessageInfo

func (m *RootResponse) GetHelpString() string {
	if m != nil {
		return m.HelpString
	}
	return ""
}

func (m *RootResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

//
// Request format for list() command
type ListRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	All                  bool         `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{10}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *ListRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

//
// Response format for list() command
type ListResponse struct {
	DeviceList           []string      `protobuf:"bytes,1,rep,name=deviceList,proto3" json:"deviceList,omitempty"`
	DeviceDetails        []string      `protobuf:"bytes,2,rep,name=deviceDetails,proto3" json:"deviceDetails,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{11}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (dst *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(dst, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetDeviceList() []string {
	if m != nil {
		return m.DeviceList
	}
	return nil
}

func (m *ListResponse) GetDeviceDetails() []string {
	if m != nil {
		return m.DeviceDetails
	}
	return nil
}

func (m *ListResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

//
// Request format for firmware() command
type FirmwareRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Filename             string       `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FirmwareRequest) Reset()         { *m = FirmwareRequest{} }
func (m *FirmwareRequest) String() string { return proto.CompactTextString(m) }
func (*FirmwareRequest) ProtoMessage()    {}
func (*FirmwareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{12}
}
func (m *FirmwareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareRequest.Unmarshal(m, b)
}
func (m *FirmwareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareRequest.Marshal(b, m, deterministic)
}
func (dst *FirmwareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareRequest.Merge(dst, src)
}
func (m *FirmwareRequest) XXX_Size() int {
	return xxx_messageInfo_FirmwareRequest.Size(m)
}
func (m *FirmwareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareRequest proto.InternalMessageInfo

func (m *FirmwareRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *FirmwareRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

//
// Response format for list() command
type FirmwareResponse struct {
	Version              string        `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FirmwareResponse) Reset()         { *m = FirmwareResponse{} }
func (m *FirmwareResponse) String() string { return proto.CompactTextString(m) }
func (*FirmwareResponse) ProtoMessage()    {}
func (*FirmwareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{13}
}
func (m *FirmwareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirmwareResponse.Unmarshal(m, b)
}
func (m *FirmwareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirmwareResponse.Marshal(b, m, deterministic)
}
func (dst *FirmwareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirmwareResponse.Merge(dst, src)
}
func (m *FirmwareResponse) XXX_Size() int {
	return xxx_messageInfo_FirmwareResponse.Size(m)
}
func (m *FirmwareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FirmwareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FirmwareResponse proto.InternalMessageInfo

func (m *FirmwareResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *FirmwareResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

//
// Request format for heartbeat() command
type HeartbeatRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Enable               bool         `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{14}
}
func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (dst *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(dst, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *HeartbeatRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

//
// Request format for address() command
type AddressRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Address              uint32       `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{15}
}
func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (dst *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(dst, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *AddressRequest) GetAddress() uint32 {
	if m != nil {
		return m.Address
	}
	return 0
}

//
// Response format for address() command
type AddressResponse struct {
	CurrentAddress       uint32        `protobuf:"varint,1,opt,name=currentAddress,proto3" json:"currentAddress,omitempty"`
	PreviousAddress      uint32        `protobuf:"varint,2,opt,name=previousAddress,proto3" json:"previousAddress,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddressResponse) Reset()         { *m = AddressResponse{} }
func (m *AddressResponse) String() string { return proto.CompactTextString(m) }
func (*AddressResponse) ProtoMessage()    {}
func (*AddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{16}
}
func (m *AddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressResponse.Unmarshal(m, b)
}
func (m *AddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressResponse.Marshal(b, m, deterministic)
}
func (dst *AddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressResponse.Merge(dst, src)
}
func (m *AddressResponse) XXX_Size() int {
	return xxx_messageInfo_AddressResponse.Size(m)
}
func (m *AddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddressResponse proto.InternalMessageInfo

func (m *AddressResponse) GetCurrentAddress() uint32 {
	if m != nil {
		return m.CurrentAddress
	}
	return 0
}

func (m *AddressResponse) GetPreviousAddress() uint32 {
	if m != nil {
		return m.PreviousAddress
	}
	return 0
}

func (m *AddressResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

//
// Request type for Set/Get Parameter()
// value is not set to signify a 'Get' command
type ParameterRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Parameter            ConfigParam  `protobuf:"varint,2,opt,name=parameter,proto3,enum=sparkusb.ConfigParam" json:"parameter,omitempty"`
	Value                string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ParameterRequest) Reset()         { *m = ParameterRequest{} }
func (m *ParameterRequest) String() string { return proto.CompactTextString(m) }
func (*ParameterRequest) ProtoMessage()    {}
func (*ParameterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{17}
}
func (m *ParameterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterRequest.Unmarshal(m, b)
}
func (m *ParameterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterRequest.Marshal(b, m, deterministic)
}
func (dst *ParameterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterRequest.Merge(dst, src)
}
func (m *ParameterRequest) XXX_Size() int {
	return xxx_messageInfo_ParameterRequest.Size(m)
}
func (m *ParameterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterRequest proto.InternalMessageInfo

func (m *ParameterRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *ParameterRequest) GetParameter() ConfigParam {
	if m != nil {
		return m.Parameter
	}
	return ConfigParam_kCanID
}

func (m *ParameterRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//
// Response type for Set/Get Parameter()
type ParameterResponse struct {
	Value                string        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type                 ParamType     `protobuf:"varint,2,opt,name=type,proto3,enum=sparkusb.ParamType" json:"type,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,4,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ParameterResponse) Reset()         { *m = ParameterResponse{} }
func (m *ParameterResponse) String() string { return proto.CompactTextString(m) }
func (*ParameterResponse) ProtoMessage()    {}
func (*ParameterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{18}
}
func (m *ParameterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterResponse.Unmarshal(m, b)
}
func (m *ParameterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterResponse.Marshal(b, m, deterministic)
}
func (dst *ParameterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterResponse.Merge(dst, src)
}
func (m *ParameterResponse) XXX_Size() int {
	return xxx_messageInfo_ParameterResponse.Size(m)
}
func (m *ParameterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterResponse proto.InternalMessageInfo

func (m *ParameterResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ParameterResponse) GetType() ParamType {
	if m != nil {
		return m.Type
	}
	return ParamType_int32
}

func (m *ParameterResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type ParameterListRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ParameterListRequest) Reset()         { *m = ParameterListRequest{} }
func (m *ParameterListRequest) String() string { return proto.CompactTextString(m) }
func (*ParameterListRequest) ProtoMessage()    {}
func (*ParameterListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{19}
}
func (m *ParameterListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterListRequest.Unmarshal(m, b)
}
func (m *ParameterListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterListRequest.Marshal(b, m, deterministic)
}
func (dst *ParameterListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterListRequest.Merge(dst, src)
}
func (m *ParameterListRequest) XXX_Size() int {
	return xxx_messageInfo_ParameterListRequest.Size(m)
}
func (m *ParameterListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterListRequest proto.InternalMessageInfo

func (m *ParameterListRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

type ParameterListResponse struct {
	Parameter            []string      `protobuf:"bytes,1,rep,name=parameter,proto3" json:"parameter,omitempty"`
	Type                 []ParamType   `protobuf:"varint,2,rep,packed,name=type,proto3,enum=sparkusb.ParamType" json:"type,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ParameterListResponse) Reset()         { *m = ParameterListResponse{} }
func (m *ParameterListResponse) String() string { return proto.CompactTextString(m) }
func (*ParameterListResponse) ProtoMessage()    {}
func (*ParameterListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{20}
}
func (m *ParameterListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterListResponse.Unmarshal(m, b)
}
func (m *ParameterListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterListResponse.Marshal(b, m, deterministic)
}
func (dst *ParameterListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterListResponse.Merge(dst, src)
}
func (m *ParameterListResponse) XXX_Size() int {
	return xxx_messageInfo_ParameterListResponse.Size(m)
}
func (m *ParameterListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterListResponse proto.InternalMessageInfo

func (m *ParameterListResponse) GetParameter() []string {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *ParameterListResponse) GetType() []ParamType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ParameterListResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

//
// Request format for Setpoint() command
type SetpointRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Setpoint             float32      `protobuf:"fixed32,2,opt,name=setpoint,proto3" json:"setpoint,omitempty"`
	Enable               bool         `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetpointRequest) Reset()         { *m = SetpointRequest{} }
func (m *SetpointRequest) String() string { return proto.CompactTextString(m) }
func (*SetpointRequest) ProtoMessage()    {}
func (*SetpointRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{21}
}
func (m *SetpointRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetpointRequest.Unmarshal(m, b)
}
func (m *SetpointRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetpointRequest.Marshal(b, m, deterministic)
}
func (dst *SetpointRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetpointRequest.Merge(dst, src)
}
func (m *SetpointRequest) XXX_Size() int {
	return xxx_messageInfo_SetpointRequest.Size(m)
}
func (m *SetpointRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetpointRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetpointRequest proto.InternalMessageInfo

func (m *SetpointRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *SetpointRequest) GetSetpoint() float32 {
	if m != nil {
		return m.Setpoint
	}
	return 0
}

func (m *SetpointRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

//
// Response format for Setpoint() command
// isRunning is not implemented yet
type SetpointResponse struct {
	Setpoint             float32       `protobuf:"fixed32,1,opt,name=setpoint,proto3" json:"setpoint,omitempty"`
	IsRunning            bool          `protobuf:"varint,2,opt,name=isRunning,proto3" json:"isRunning,omitempty"`
	Root                 *RootResponse `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetpointResponse) Reset()         { *m = SetpointResponse{} }
func (m *SetpointResponse) String() string { return proto.CompactTextString(m) }
func (*SetpointResponse) ProtoMessage()    {}
func (*SetpointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{22}
}
func (m *SetpointResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetpointResponse.Unmarshal(m, b)
}
func (m *SetpointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetpointResponse.Marshal(b, m, deterministic)
}
func (dst *SetpointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetpointResponse.Merge(dst, src)
}
func (m *SetpointResponse) XXX_Size() int {
	return xxx_messageInfo_SetpointResponse.Size(m)
}
func (m *SetpointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetpointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetpointResponse proto.InternalMessageInfo

func (m *SetpointResponse) GetSetpoint() float32 {
	if m != nil {
		return m.Setpoint
	}
	return 0
}

func (m *SetpointResponse) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

func (m *SetpointResponse) GetRoot() *RootResponse {
	if m != nil {
		return m.Root
	}
	return nil
}

type FollowerRequest struct {
	Root                 *RootCommand `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Followerid           uint32       `protobuf:"varint,2,opt,name=followerid,proto3" json:"followerid,omitempty"`
	Followerconfig       uint32       `protobuf:"varint,3,opt,name=followerconfig,proto3" json:"followerconfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FollowerRequest) Reset()         { *m = FollowerRequest{} }
func (m *FollowerRequest) String() string { return proto.CompactTextString(m) }
func (*FollowerRequest) ProtoMessage()    {}
func (*FollowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_9ae9df3f60e95caa, []int{23}
}
func (m *FollowerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowerRequest.Unmarshal(m, b)
}
func (m *FollowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowerRequest.Marshal(b, m, deterministic)
}
func (dst *FollowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowerRequest.Merge(dst, src)
}
func (m *FollowerRequest) XXX_Size() int {
	return xxx_messageInfo_FollowerRequest.Size(m)
}
func (m *FollowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowerRequest proto.InternalMessageInfo

func (m *FollowerRequest) GetRoot() *RootCommand {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *FollowerRequest) GetFollowerid() uint32 {
	if m != nil {
		return m.Followerid
	}
	return 0
}

func (m *FollowerRequest) GetFollowerconfig() uint32 {
	if m != nil {
		return m.Followerconfig
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestWire)(nil), "sparkusb.RequestWire")
	proto.RegisterType((*ResponseWire)(nil), "sparkusb.ResponseWire")
	proto.RegisterType((*ControlRequest)(nil), "sparkusb.controlRequest")
	proto.RegisterType((*BurnRequest)(nil), "sparkusb.burnRequest")
	proto.RegisterType((*BurnResponse)(nil), "sparkusb.burnResponse")
	proto.RegisterType((*ControlResponse)(nil), "sparkusb.controlResponse")
	proto.RegisterType((*CommandLineRequest)(nil), "sparkusb.commandLineRequest")
	proto.RegisterType((*CommandLineResponse)(nil), "sparkusb.commandLineResponse")
	proto.RegisterType((*RootCommand)(nil), "sparkusb.rootCommand")
	proto.RegisterType((*RootResponse)(nil), "sparkusb.rootResponse")
	proto.RegisterType((*ListRequest)(nil), "sparkusb.listRequest")
	proto.RegisterType((*ListResponse)(nil), "sparkusb.listResponse")
	proto.RegisterType((*FirmwareRequest)(nil), "sparkusb.firmwareRequest")
	proto.RegisterType((*FirmwareResponse)(nil), "sparkusb.firmwareResponse")
	proto.RegisterType((*HeartbeatRequest)(nil), "sparkusb.heartbeatRequest")
	proto.RegisterType((*AddressRequest)(nil), "sparkusb.addressRequest")
	proto.RegisterType((*AddressResponse)(nil), "sparkusb.addressResponse")
	proto.RegisterType((*ParameterRequest)(nil), "sparkusb.parameterRequest")
	proto.RegisterType((*ParameterResponse)(nil), "sparkusb.parameterResponse")
	proto.RegisterType((*ParameterListRequest)(nil), "sparkusb.parameterListRequest")
	proto.RegisterType((*ParameterListResponse)(nil), "sparkusb.parameterListResponse")
	proto.RegisterType((*SetpointRequest)(nil), "sparkusb.setpointRequest")
	proto.RegisterType((*SetpointResponse)(nil), "sparkusb.setpointResponse")
	proto.RegisterType((*FollowerRequest)(nil), "sparkusb.followerRequest")
	proto.RegisterEnum("sparkusb.ControlMessage", ControlMessage_name, ControlMessage_value)
	proto.RegisterEnum("sparkusb.ConfigParam", ConfigParam_name, ConfigParam_value)
	proto.RegisterEnum("sparkusb.MotorType", MotorType_name, MotorType_value)
	proto.RegisterEnum("sparkusb.SensorType", SensorType_name, SensorType_value)
	proto.RegisterEnum("sparkusb.CtrlType", CtrlType_name, CtrlType_value)
	proto.RegisterEnum("sparkusb.IdleMode", IdleMode_name, IdleMode_value)
	proto.RegisterEnum("sparkusb.Faults", Faults_name, Faults_value)
	proto.RegisterEnum("sparkusb.StickyFaults", StickyFaults_name, StickyFaults_value)
	proto.RegisterEnum("sparkusb.ParamType", ParamType_name, ParamType_value)
}

func init() { proto.RegisterFile("commands.proto", fileDescriptor_commands_9ae9df3f60e95caa) }

var fileDescriptor_commands_9ae9df3f60e95caa = []byte{
	// 1918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xdd, 0x52, 0x23, 0xc7,
	0x15, 0xd6, 0x20, 0x21, 0xa4, 0x23, 0x21, 0x1d, 0x1a, 0x58, 0x8f, 0xb5, 0xeb, 0x35, 0x99, 0x38,
	0x5e, 0x2c, 0x6f, 0xd6, 0x20, 0x79, 0xb3, 0xbb, 0xf9, 0xa9, 0x0a, 0x08, 0x64, 0x48, 0x41, 0x96,
	0x1a, 0xe2, 0xb5, 0x2b, 0x37, 0xd4, 0xa0, 0x69, 0x60, 0x4a, 0xa3, 0x19, 0xb9, 0xa7, 0x25, 0xcc,
	0x4d, 0x2a, 0x17, 0xb9, 0x48, 0xe5, 0xc6, 0x0f, 0x91, 0x5c, 0xe6, 0x2d, 0xf2, 0x62, 0xa9, 0xee,
	0xe9, 0xf9, 0x45, 0xc2, 0x2b, 0x97, 0xef, 0x74, 0xbe, 0x3e, 0xff, 0xfd, 0xf5, 0xe9, 0x51, 0x43,
	0x63, 0xe0, 0x8f, 0x46, 0x96, 0x67, 0x07, 0x2f, 0xc6, 0xcc, 0xe7, 0x3e, 0xa9, 0x04, 0x63, 0x8b,
	0x0d, 0x27, 0xc1, 0xa5, 0xf1, 0xdf, 0x65, 0xa8, 0x99, 0xf4, 0xbb, 0x09, 0x0d, 0xf8, 0x37, 0x0e,
	0xa3, 0xe4, 0x73, 0x28, 0x31, 0xdf, 0xe7, 0x3a, 0x6c, 0x69, 0xdb, 0xb5, 0xce, 0xe6, 0x8b, 0x48,
	0xf1, 0x85, 0x40, 0x7b, 0xa1, 0x97, 0xa3, 0x82, 0x29, 0x95, 0xc8, 0x6b, 0x58, 0x19, 0x8c, 0xec,
	0x13, 0xc7, 0xa3, 0x7a, 0x4d, 0xea, 0x3f, 0x49, 0xf4, 0x55, 0x44, 0xb1, 0xa8, 0xfc, 0x1f, 0x15,
	0xcc, 0x48, 0x5d, 0x84, 0x71, 0x9d, 0x80, 0xeb, 0xf5, 0x7c, 0x18, 0x81, 0x26, 0xfa, 0x52, 0x89,
	0xbc, 0x82, 0xca, 0x95, 0xc3, 0x46, 0xb7, 0x16, 0xa3, 0xfa, 0xaa, 0x34, 0xf8, 0x30, 0x31, 0x88,
	0x56, 0x12, 0xa3, 0x58, 0x99, 0xfc, 0x16, 0xaa, 0x37, 0xd4, 0x62, 0xfc, 0x92, 0x5a, 0x5c, 0x6f,
	0x48, 0xcb, 0x56, 0x62, 0x19, 0x2f, 0x25, 0xa6, 0x89, 0x3a, 0xf9, 0x12, 0x56, 0x2c, 0xdb, 0x66,
	0x34, 0x08, 0xf4, 0xa6, 0xb4, 0xd4, 0x13, 0x4b, 0xb5, 0x90, 0xaa, 0x4b, 0x21, 0x22, 0xe2, 0xd8,
	0x62, 0xd6, 0x88, 0x72, 0xca, 0x74, 0xcc, 0x47, 0x8c, 0x97, 0x52, 0x11, 0x63, 0x8c, 0xf4, 0x61,
	0x35, 0x16, 0x4e, 0x44, 0x73, 0xd6, 0xa4, 0xfd, 0xd3, 0x19, 0xf6, 0x27, 0x99, 0x2e, 0x65, 0xcd,
	0x44, 0xbb, 0x02, 0xca, 0xc7, 0xbe, 0xe3, 0x71, 0x9d, 0xe4, 0xdb, 0x15, 0xad, 0xa4, 0xda, 0x15,
	0x41, 0xa2, 0xe4, 0x81, 0xef, 0x71, 0xe6, 0xbb, 0xfa, 0x7a, 0xbe, 0x64, 0xb5, 0x90, 0xde, 0xca,
	0x10, 0x91, 0xbb, 0xe3, 0xbb, 0xae, 0x7f, 0x4b, 0x99, 0xbe, 0x71, 0x6f, 0x77, 0xd4, 0x4a, 0x7a,
	0x77, 0x14, 0x24, 0x38, 0x70, 0x39, 0x61, 0x9e, 0xbe, 0x99, 0xe7, 0x80, 0x40, 0x53, 0x1c, 0x10,
	0xe2, 0xfe, 0x32, 0x14, 0x19, 0xfd, 0xce, 0xf8, 0x5f, 0x09, 0xea, 0x26, 0x0d, 0xc6, 0xbe, 0x17,
	0x50, 0xc9, 0xd7, 0xe7, 0x19, 0xbe, 0x3e, 0xca, 0xf2, 0x35, 0xd2, 0x8c, 0x09, 0xfb, 0x26, 0x4f,
	0xd8, 0x8f, 0xe6, 0x10, 0x36, 0xb6, 0x8b, 0x19, 0xfb, 0x3c, 0xc3, 0xd8, 0x47, 0x79, 0xc6, 0x26,
	0x81, 0x24, 0x65, 0x5f, 0xdf, 0xa3, 0x6c, 0x6b, 0x16, 0x65, 0x63, 0xab, 0x84, 0xb3, 0x2f, 0x13,
	0xde, 0x35, 0xf2, 0xdd, 0x8c, 0x79, 0x97, 0xa4, 0x17, 0x11, 0xef, 0x77, 0x69, 0xe2, 0x85, 0x84,
	0x7d, 0x3c, 0x93, 0x78, 0xb1, 0x69, 0x8a, 0x79, 0x5f, 0xa5, 0x98, 0x27, 0x8b, 0x0c, 0x99, 0xfb,
	0xf1, 0x5c, 0xe6, 0xc5, 0x4e, 0xb2, 0x76, 0xa2, 0xec, 0x98, 0x7a, 0x6b, 0xf9, 0xb2, 0x13, 0xea,
	0x25, 0x65, 0xc7, 0xdc, 0x7b, 0x99, 0x70, 0xef, 0x1e, 0x67, 0x63, 0xee, 0xa5, 0x76, 0x45, 0x91,
	0xef, 0xb9, 0xe2, 0xd0, 0x7a, 0x7e, 0x57, 0x42, 0x0e, 0x25, 0xbb, 0x22, 0x49, 0x54, 0x86, 0x12,
	0xa3, 0xc1, 0xd8, 0x78, 0x27, 0x06, 0x62, 0x9a, 0xcf, 0xc2, 0xcf, 0x80, 0x33, 0x57, 0xd7, 0xb6,
	0xb4, 0xed, 0xc6, 0x0c, 0xde, 0x9f, 0xd2, 0x20, 0xb0, 0xae, 0xa9, 0x29, 0xb5, 0xc8, 0x23, 0x28,
	0xdb, 0x74, 0xea, 0x0c, 0xa8, 0xbe, 0xb4, 0xa5, 0x6d, 0x57, 0x4d, 0x25, 0x19, 0x67, 0x50, 0x4b,
	0x71, 0x97, 0x7c, 0xa6, 0xb8, 0xa9, 0x3d, 0x30, 0x4b, 0x15, 0x31, 0x1f, 0x41, 0x79, 0x4a, 0x99,
	0x73, 0x75, 0x27, 0x3d, 0x56, 0x4c, 0x25, 0x19, 0x26, 0xd4, 0xd3, 0x95, 0x90, 0x76, 0xc6, 0xe5,
	0x1c, 0xba, 0xff, 0x88, 0xcf, 0x2f, 0xa0, 0x99, 0xeb, 0x28, 0x79, 0x02, 0xd5, 0x81, 0xef, 0x79,
	0x74, 0xc0, 0xa9, 0x2d, 0x7d, 0x57, 0xcc, 0x04, 0x30, 0xda, 0x40, 0xee, 0x4f, 0x73, 0xb2, 0x01,
	0xcb, 0x01, 0xb7, 0x1d, 0x4f, 0xea, 0x57, 0xcd, 0x50, 0x30, 0x0e, 0x61, 0x7d, 0xc6, 0x41, 0x12,
	0xb9, 0x04, 0xdc, 0xa6, 0x8c, 0x29, 0x6d, 0x25, 0x29, 0xdc, 0x9f, 0xf0, 0xa8, 0x93, 0xa1, 0x64,
	0x7c, 0x03, 0xb5, 0x54, 0x93, 0x52, 0x0d, 0xd7, 0xd2, 0x0d, 0x17, 0x79, 0x0f, 0x29, 0x1d, 0x5b,
	0xae, 0x33, 0xa5, 0xaa, 0xca, 0x04, 0x20, 0x04, 0x4a, 0x37, 0xd4, 0x1d, 0xeb, 0x45, 0xb9, 0x20,
	0x7f, 0x1b, 0x07, 0x50, 0x4f, 0xb7, 0x8a, 0x3c, 0x05, 0x10, 0xf8, 0x39, 0x67, 0x8e, 0x77, 0xad,
	0xbc, 0xa7, 0x10, 0x51, 0x25, 0x65, 0xcc, 0x67, 0x2a, 0xbf, 0x50, 0x30, 0xfe, 0x04, 0xb5, 0xd4,
	0x45, 0xb5, 0xc8, 0x46, 0x23, 0x14, 0x2d, 0xd7, 0x55, 0xb9, 0x8a, 0x9f, 0xc6, 0xdf, 0x35, 0xa8,
	0xa7, 0x67, 0x88, 0x48, 0x29, 0x2c, 0x4f, 0x5e, 0x02, 0xda, 0x56, 0x51, 0xa4, 0x94, 0x20, 0xe4,
	0x13, 0x58, 0x0d, 0xa5, 0x03, 0xca, 0x2d, 0xc7, 0x0d, 0xf4, 0x25, 0xa9, 0x92, 0x05, 0x63, 0xa6,
	0x14, 0x7f, 0x9c, 0x29, 0xc6, 0xb7, 0xd0, 0xcc, 0x5d, 0xa3, 0x8b, 0x94, 0xd4, 0x12, 0xb3, 0xce,
	0xa5, 0x9e, 0x35, 0x8a, 0xce, 0x43, 0x2c, 0x1b, 0xdf, 0x02, 0xe6, 0xa7, 0x1d, 0xd1, 0x61, 0x65,
	0x4a, 0x59, 0xe0, 0xf8, 0x11, 0x75, 0x22, 0x71, 0xa1, 0x9c, 0xbf, 0x06, 0xcc, 0x5f, 0xe0, 0x0b,
	0x1e, 0x38, 0xea, 0x59, 0x97, 0x6e, 0x44, 0x1b, 0x25, 0x19, 0x5f, 0x43, 0x23, 0x7b, 0xbb, 0x2f,
	0xe2, 0x54, 0x4f, 0x66, 0xb7, 0xf0, 0xba, 0x1a, 0x8f, 0x67, 0xe3, 0x07, 0x0d, 0x9a, 0xb9, 0xe9,
	0x4d, 0x3e, 0x85, 0xc6, 0x60, 0xc2, 0x18, 0xf5, 0xf8, 0x9e, 0x32, 0xd2, 0xa4, 0x51, 0x0e, 0x25,
	0xdb, 0xd0, 0x1c, 0x33, 0x3a, 0x75, 0xfc, 0x49, 0xb0, 0x97, 0xf1, 0x9e, 0x87, 0x17, 0xea, 0xdf,
	0x3f, 0x35, 0xc0, 0xfc, 0xf7, 0xc8, 0x22, 0xb5, 0x76, 0xd3, 0x17, 0xce, 0x92, 0x1c, 0x9b, 0x9b,
	0x99, 0xb1, 0x79, 0xe5, 0x5c, 0x9f, 0x09, 0x85, 0xf4, 0x45, 0xb3, 0x01, 0xcb, 0x53, 0xcb, 0x9d,
	0x50, 0x99, 0x61, 0xd5, 0x0c, 0x05, 0xe3, 0x6f, 0xb0, 0x76, 0xef, 0x82, 0x4a, 0x54, 0xb5, 0x94,
	0x2a, 0x79, 0x06, 0x25, 0x7e, 0x37, 0xa6, 0x2a, 0xe0, 0x7a, 0xee, 0x82, 0xfa, 0xcb, 0xdd, 0x98,
	0x9a, 0x52, 0x21, 0x6e, 0x45, 0xe9, 0x3d, 0x5a, 0xb1, 0x07, 0x1b, 0xb3, 0xbe, 0xac, 0x16, 0xe8,
	0x86, 0xf1, 0x2f, 0x0d, 0x36, 0x67, 0xde, 0x91, 0x62, 0x44, 0x25, 0x7d, 0x0a, 0x0f, 0x73, 0xaa,
	0x21, 0x49, 0x3d, 0xc5, 0xf7, 0xab, 0xe7, 0x7d, 0xb6, 0x76, 0x0c, 0xcd, 0xdc, 0x67, 0xde, 0x82,
	0xc7, 0x39, 0xbe, 0xc3, 0x45, 0x9b, 0x97, 0x52, 0xb7, 0x74, 0x72, 0x6a, 0x8a, 0x99, 0x53, 0xf3,
	0x3d, 0x60, 0xfe, 0x76, 0xcf, 0xf8, 0xd1, 0x72, 0x7e, 0x9e, 0x40, 0xd5, 0x09, 0xcc, 0x89, 0xe7,
	0x89, 0xa1, 0xab, 0xe6, 0x76, 0x0c, 0x2c, 0x54, 0xeb, 0x3f, 0x34, 0x68, 0xe6, 0x3e, 0x32, 0x17,
	0x29, 0xf6, 0x29, 0x40, 0x64, 0xed, 0xd8, 0xea, 0x58, 0xa5, 0x10, 0x71, 0x46, 0x23, 0x29, 0xa4,
	0xb4, 0x4c, 0x6a, 0xd5, 0xcc, 0xa1, 0xed, 0x93, 0xf8, 0x8b, 0x42, 0x7d, 0x29, 0x90, 0x26, 0xd4,
	0x14, 0x72, 0xe6, 0x78, 0xd7, 0x58, 0x20, 0x24, 0x56, 0xe9, 0x85, 0x37, 0x2b, 0x6a, 0x64, 0x13,
	0xd6, 0x14, 0x76, 0xe0, 0x04, 0xea, 0xc2, 0xc5, 0xa5, 0xf6, 0x0f, 0x2b, 0xd2, 0x38, 0x3a, 0x41,
	0x04, 0xa0, 0x3c, 0xec, 0x59, 0xde, 0xf1, 0x01, 0x16, 0x48, 0x03, 0x60, 0x78, 0xec, 0x8d, 0x27,
	0xfc, 0xd4, 0xb7, 0x29, 0x6a, 0x52, 0x3e, 0xf5, 0xb9, 0xcf, 0x04, 0x59, 0x70, 0x89, 0x20, 0xd4,
	0x87, 0xa2, 0xc6, 0x3d, 0x7b, 0x6a, 0x79, 0x03, 0x8a, 0x45, 0x91, 0xc9, 0xf0, 0x9c, 0x7a, 0x81,
	0x52, 0x29, 0x91, 0x55, 0xa8, 0x0e, 0x7b, 0x9c, 0xb9, 0x52, 0x5c, 0x96, 0xe2, 0xb1, 0xed, 0x52,
	0xe9, 0xb0, 0x2c, 0xf2, 0x0c, 0x03, 0x1c, 0x50, 0xcb, 0xbe, 0xb4, 0x3c, 0x1b, 0x57, 0xa4, 0xd3,
	0xbe, 0x9a, 0xe3, 0xef, 0x28, 0xc3, 0x8a, 0x74, 0x7a, 0x64, 0xb9, 0xee, 0xdb, 0xab, 0xab, 0x80,
	0x72, 0xac, 0xca, 0x3c, 0xce, 0x7c, 0x97, 0x9e, 0x59, 0x0e, 0x0b, 0x10, 0xc2, 0x3c, 0xc2, 0x41,
	0xd6, 0xbb, 0xf1, 0xc7, 0x58, 0x23, 0x6b, 0xb0, 0x1a, 0x21, 0x27, 0xce, 0xc8, 0xe1, 0x58, 0x27,
	0x15, 0x28, 0x0d, 0xcf, 0x2e, 0x76, 0x70, 0x55, 0xfe, 0x3a, 0xbe, 0xd8, 0xc1, 0x86, 0xfc, 0x75,
	0x70, 0xb1, 0x83, 0x4d, 0xf9, 0xab, 0x7f, 0xb1, 0x83, 0x48, 0xea, 0x50, 0x19, 0x1e, 0xff, 0xd5,
	0xf7, 0xe8, 0xc5, 0x0e, 0xae, 0xc9, 0x50, 0x07, 0x7d, 0xc7, 0xe5, 0x94, 0x5d, 0xec, 0x20, 0x91,
	0xa1, 0xde, 0x4e, 0xb8, 0xe8, 0x89, 0xe3, 0x5d, 0xec, 0xe0, 0x7a, 0x1a, 0xb1, 0xbe, 0xbf, 0xd8,
	0xc1, 0x0d, 0x15, 0x69, 0x17, 0x37, 0x55, 0xa4, 0x5d, 0x7c, 0xa4, 0x22, 0xed, 0xe2, 0x07, 0x2a,
	0xd2, 0x2e, 0xea, 0xa9, 0x48, 0xbb, 0xf8, 0x61, 0x26, 0xd2, 0x2e, 0xb6, 0x72, 0x91, 0x76, 0xf1,
	0x71, 0x2e, 0xd2, 0x2e, 0x3e, 0x51, 0x91, 0x3a, 0xf8, 0x91, 0x8a, 0xd4, 0xc1, 0xa7, 0x2a, 0x52,
	0x07, 0x3f, 0x56, 0x91, 0x3a, 0xb8, 0x95, 0x8a, 0xd4, 0xc1, 0x5f, 0x64, 0x22, 0x75, 0xd0, 0xc8,
	0x45, 0xea, 0xe0, 0x2f, 0x73, 0x91, 0x3a, 0xf8, 0x89, 0x8a, 0xd4, 0xc5, 0x5f, 0xa9, 0x48, 0x5d,
	0xfc, 0x54, 0x45, 0xea, 0xe2, 0x33, 0x15, 0xa9, 0x8b, 0xdb, 0xa9, 0x48, 0x5d, 0xfc, 0x2c, 0x13,
	0xa9, 0x8b, 0xed, 0x5c, 0xa4, 0x2e, 0x7e, 0x9e, 0x8b, 0xd4, 0xc5, 0xe7, 0x92, 0x22, 0x26, 0x0d,
	0x28, 0x9b, 0x52, 0x1b, 0x7f, 0x9d, 0x52, 0x30, 0x2d, 0xee, 0xf8, 0xf8, 0x82, 0x6c, 0x00, 0x0e,
	0xcf, 0x29, 0x73, 0x2c, 0xf7, 0xcf, 0x93, 0xd1, 0x25, 0x65, 0x27, 0xfe, 0x2d, 0x7e, 0x71, 0x0f,
	0x3d, 0x75, 0x6c, 0xdc, 0x11, 0xa4, 0xcf, 0xa0, 0x47, 0xce, 0xf5, 0x0d, 0xee, 0x92, 0xc7, 0xf0,
	0xc1, 0x50, 0xf2, 0xe2, 0xfc, 0xd6, 0xe1, 0x83, 0x9b, 0xfe, 0xad, 0x7d, 0xe6, 0xbb, 0x16, 0x73,
	0xf8, 0x1d, 0x76, 0xf2, 0x8b, 0x26, 0x9d, 0xc6, 0x8b, 0x5d, 0xb2, 0x0e, 0xcd, 0xe1, 0x91, 0xc5,
	0x6c, 0xa9, 0xd0, 0xbf, 0xb5, 0x0f, 0x3d, 0xfc, 0x32, 0x0b, 0x9a, 0x74, 0x7a, 0xe8, 0xe1, 0x4b,
	0x09, 0x9e, 0xfb, 0x57, 0x3c, 0xa5, 0xf9, 0x9b, 0x2c, 0x18, 0x6a, 0xbe, 0x0a, 0x2b, 0xb6, 0x46,
	0x63, 0xd3, 0xe2, 0x14, 0x5f, 0xb7, 0x9f, 0x41, 0x75, 0x14, 0x1d, 0x32, 0x52, 0x83, 0x95, 0x7d,
	0x36, 0x09, 0x6e, 0xa8, 0x8d, 0x05, 0xa1, 0x28, 0x05, 0x97, 0x06, 0x01, 0x6a, 0xed, 0x37, 0x00,
	0x41, 0x7c, 0xd6, 0x44, 0xaf, 0xc5, 0x21, 0x09, 0x4f, 0x1f, 0x16, 0x84, 0xe5, 0xa1, 0x37, 0xf0,
	0x6d, 0xca, 0xc2, 0x93, 0x1b, 0x2e, 0x48, 0xd3, 0xa5, 0xf6, 0x33, 0xa8, 0x0c, 0xd4, 0xa9, 0x14,
	0x5e, 0x0f, 0x26, 0xfc, 0xae, 0x77, 0x37, 0x70, 0x29, 0x16, 0xc4, 0x0e, 0xbe, 0xa3, 0xae, 0x3f,
	0x10, 0xf5, 0x6a, 0xed, 0x2d, 0xa8, 0x38, 0xea, 0xbc, 0x92, 0x2a, 0x2c, 0xf7, 0x7c, 0x2b, 0xe0,
	0x58, 0x10, 0x3f, 0xf7, 0x99, 0x35, 0xa4, 0xa8, 0xb5, 0x03, 0x28, 0x5f, 0x59, 0x13, 0x97, 0x07,
	0xc2, 0x72, 0x9f, 0xf9, 0xb7, 0x9e, 0x3f, 0x11, 0x2a, 0x4d, 0xa8, 0xbd, 0x9d, 0x52, 0xa6, 0x3e,
	0x30, 0x50, 0x8b, 0x80, 0xa9, 0xef, 0x72, 0xeb, 0x5a, 0x8c, 0x8f, 0x06, 0x80, 0x9c, 0x26, 0x7d,
	0x61, 0x1e, 0x0e, 0x8f, 0x30, 0xc9, 0x10, 0x28, 0x89, 0x28, 0xe7, 0xdc, 0x72, 0xdd, 0x70, 0x70,
	0x1c, 0x1e, 0x9e, 0x99, 0x6f, 0x4f, 0x7b, 0x66, 0x0f, 0xcb, 0xed, 0x7f, 0x6b, 0x50, 0x0f, 0xb8,
	0x33, 0x18, 0xde, 0xf5, 0xc3, 0xd8, 0x04, 0x1a, 0x51, 0xec, 0x73, 0x89, 0x63, 0x41, 0x6c, 0x7e,
	0x2a, 0x03, 0x05, 0x6b, 0x11, 0xac, 0xf2, 0x50, 0xf0, 0x92, 0x20, 0x50, 0x92, 0x8d, 0x42, 0x8b,
	0x42, 0x39, 0x95, 0x93, 0x82, 0x4b, 0x32, 0x55, 0x91, 0x99, 0x02, 0x96, 0xc5, 0xc6, 0xc6, 0xf9,
	0x29, 0xb0, 0xdc, 0x7e, 0xa3, 0xee, 0x63, 0xd9, 0xe6, 0x2a, 0x2c, 0x3b, 0x1e, 0xef, 0x76, 0xb0,
	0x20, 0x66, 0xec, 0x24, 0xfc, 0xad, 0x89, 0x6d, 0xba, 0x72, 0x7d, 0x4b, 0x08, 0x4b, 0xe2, 0x1c,
	0x5d, 0xfa, 0xbe, 0x8b, 0xc5, 0xce, 0x7f, 0x96, 0x21, 0x7e, 0x38, 0x23, 0x7f, 0x84, 0x15, 0x35,
	0xc7, 0xc9, 0xdc, 0x67, 0x92, 0xd6, 0xfc, 0x3f, 0xb1, 0x46, 0x81, 0xf4, 0x00, 0x92, 0xa9, 0xff,
	0x53, 0x9d, 0xfc, 0x01, 0x4a, 0xe2, 0x7e, 0xf9, 0xa9, 0xe6, 0xaf, 0xa0, 0x24, 0xff, 0x53, 0xcc,
	0x7e, 0x81, 0x6b, 0xcd, 0x79, 0xe6, 0x30, 0x0a, 0x64, 0x0f, 0xaa, 0x47, 0xf1, 0x5b, 0xd9, 0x03,
	0x8f, 0x6a, 0xad, 0x39, 0xd7, 0xb7, 0x51, 0x20, 0xc7, 0x50, 0x3f, 0xa7, 0xfc, 0x2c, 0xfe, 0x16,
	0x7a, 0xe0, 0xa1, 0xac, 0xf5, 0xd0, 0x5b, 0x46, 0xe8, 0xea, 0xab, 0x9f, 0xc9, 0xd5, 0xef, 0xa1,
	0xba, 0x3f, 0x61, 0x5e, 0xdf, 0xb5, 0x82, 0x1b, 0x32, 0xfb, 0x51, 0xaa, 0x35, 0xe7, 0x9d, 0x41,
	0xee, 0x69, 0xe5, 0x3c, 0xfa, 0xc8, 0x99, 0xff, 0xea, 0xd6, 0x7a, 0xe0, 0x55, 0x44, 0xee, 0x69,
	0xb9, 0x2f, 0x3f, 0x2f, 0xc8, 0xfc, 0x97, 0xb4, 0xf9, 0x7d, 0xbd, 0x2c, 0xcb, 0x37, 0xde, 0xee,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x88, 0x31, 0xa4, 0x93, 0xf5, 0x15, 0x00, 0x00,
}
